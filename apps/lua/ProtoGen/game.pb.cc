// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#include "game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class LoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginReq>
      _instance;
} _LoginReq_default_instance_;
class GuestLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuestLogin>
      _instance;
} _GuestLogin_default_instance_;
class GuestLoginInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuestLoginInfo>
      _instance;
} _GuestLoginInfo_default_instance_;
class GuestLoginResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuestLoginRes>
      _instance;
} _GuestLoginRes_default_instance_;
class ResposeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Respose>
      _instance;
} _Respose_default_instance_;
class SendMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendMsg>
      _instance;
} _SendMsg_default_instance_;
class SendEmojiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendEmoji>
      _instance;
} _SendEmoji_default_instance_;
class RecvMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecvMsg>
      _instance;
} _RecvMsg_default_instance_;
class ModifyNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyName>
      _instance;
} _ModifyName_default_instance_;
class ModifyPlayerIconDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyPlayerIcon>
      _instance;
} _ModifyPlayerIcon_default_instance_;
class RecvEmojiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecvEmoji>
      _instance;
} _RecvEmoji_default_instance_;
class AccountUpgradeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountUpgradeReq>
      _instance;
} _AccountUpgradeReq_default_instance_;
class AccountUpgradeResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountUpgradeRes>
      _instance;
} _AccountUpgradeRes_default_instance_;
class UserLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLoginReq>
      _instance;
} _UserLoginReq_default_instance_;
class UserLoginResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLoginRes>
      _instance;
} _UserLoginRes_default_instance_;
class UserLoginOutResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLoginOutRes>
      _instance;
} _UserLoginOutRes_default_instance_;
class PlayerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerData>
      _instance;
} _PlayerData_default_instance_;
class LoginBonusDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginBonusData>
      _instance;
} _LoginBonusData_default_instance_;
class GetPlayerDataResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerDataRes>
      _instance;
} _GetPlayerDataRes_default_instance_;
class GetLoginBonusReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetLoginBonusReq>
      _instance;
} _GetLoginBonusReq_default_instance_;
class GetLoginBonusResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetLoginBonusRes>
      _instance;
} _GetLoginBonusRes_default_instance_;
namespace protobuf_game_2eproto {
void InitDefaultsLoginReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_LoginReq_default_instance_;
    new (ptr) ::LoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginReq::InitAsDefaultInstance();
}

void InitDefaultsLoginReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginReqImpl);
}

void InitDefaultsGuestLoginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GuestLogin_default_instance_;
    new (ptr) ::GuestLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GuestLogin::InitAsDefaultInstance();
}

void InitDefaultsGuestLogin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuestLoginImpl);
}

void InitDefaultsGuestLoginInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GuestLoginInfo_default_instance_;
    new (ptr) ::GuestLoginInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GuestLoginInfo::InitAsDefaultInstance();
}

void InitDefaultsGuestLoginInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuestLoginInfoImpl);
}

void InitDefaultsGuestLoginResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsGuestLoginInfo();
  {
    void* ptr = &::_GuestLoginRes_default_instance_;
    new (ptr) ::GuestLoginRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GuestLoginRes::InitAsDefaultInstance();
}

void InitDefaultsGuestLoginRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuestLoginResImpl);
}

void InitDefaultsResposeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Respose_default_instance_;
    new (ptr) ::Respose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Respose::InitAsDefaultInstance();
}

void InitDefaultsRespose() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResposeImpl);
}

void InitDefaultsSendMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SendMsg_default_instance_;
    new (ptr) ::SendMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SendMsg::InitAsDefaultInstance();
}

void InitDefaultsSendMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSendMsgImpl);
}

void InitDefaultsSendEmojiImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SendEmoji_default_instance_;
    new (ptr) ::SendEmoji();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SendEmoji::InitAsDefaultInstance();
}

void InitDefaultsSendEmoji() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSendEmojiImpl);
}

void InitDefaultsRecvMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RecvMsg_default_instance_;
    new (ptr) ::RecvMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RecvMsg::InitAsDefaultInstance();
}

void InitDefaultsRecvMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecvMsgImpl);
}

void InitDefaultsModifyNameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ModifyName_default_instance_;
    new (ptr) ::ModifyName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ModifyName::InitAsDefaultInstance();
}

void InitDefaultsModifyName() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModifyNameImpl);
}

void InitDefaultsModifyPlayerIconImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ModifyPlayerIcon_default_instance_;
    new (ptr) ::ModifyPlayerIcon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ModifyPlayerIcon::InitAsDefaultInstance();
}

void InitDefaultsModifyPlayerIcon() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModifyPlayerIconImpl);
}

void InitDefaultsRecvEmojiImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RecvEmoji_default_instance_;
    new (ptr) ::RecvEmoji();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RecvEmoji::InitAsDefaultInstance();
}

void InitDefaultsRecvEmoji() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecvEmojiImpl);
}

void InitDefaultsAccountUpgradeReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_AccountUpgradeReq_default_instance_;
    new (ptr) ::AccountUpgradeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountUpgradeReq::InitAsDefaultInstance();
}

void InitDefaultsAccountUpgradeReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountUpgradeReqImpl);
}

void InitDefaultsAccountUpgradeResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_AccountUpgradeRes_default_instance_;
    new (ptr) ::AccountUpgradeRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountUpgradeRes::InitAsDefaultInstance();
}

void InitDefaultsAccountUpgradeRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountUpgradeResImpl);
}

void InitDefaultsUserLoginReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserLoginReq_default_instance_;
    new (ptr) ::UserLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserLoginReq::InitAsDefaultInstance();
}

void InitDefaultsUserLoginReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserLoginReqImpl);
}

void InitDefaultsUserLoginResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsGuestLoginInfo();
  {
    void* ptr = &::_UserLoginRes_default_instance_;
    new (ptr) ::UserLoginRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserLoginRes::InitAsDefaultInstance();
}

void InitDefaultsUserLoginRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserLoginResImpl);
}

void InitDefaultsUserLoginOutResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserLoginOutRes_default_instance_;
    new (ptr) ::UserLoginOutRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserLoginOutRes::InitAsDefaultInstance();
}

void InitDefaultsUserLoginOutRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserLoginOutResImpl);
}

void InitDefaultsPlayerDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerData_default_instance_;
    new (ptr) ::PlayerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerData::InitAsDefaultInstance();
}

void InitDefaultsPlayerData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerDataImpl);
}

void InitDefaultsLoginBonusDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_LoginBonusData_default_instance_;
    new (ptr) ::LoginBonusData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginBonusData::InitAsDefaultInstance();
}

void InitDefaultsLoginBonusData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginBonusDataImpl);
}

void InitDefaultsGetPlayerDataResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsPlayerData();
  protobuf_game_2eproto::InitDefaultsLoginBonusData();
  {
    void* ptr = &::_GetPlayerDataRes_default_instance_;
    new (ptr) ::GetPlayerDataRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetPlayerDataRes::InitAsDefaultInstance();
}

void InitDefaultsGetPlayerDataRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetPlayerDataResImpl);
}

void InitDefaultsGetLoginBonusReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GetLoginBonusReq_default_instance_;
    new (ptr) ::GetLoginBonusReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetLoginBonusReq::InitAsDefaultInstance();
}

void InitDefaultsGetLoginBonusReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetLoginBonusReqImpl);
}

void InitDefaultsGetLoginBonusResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsLoginBonusData();
  {
    void* ptr = &::_GetLoginBonusRes_default_instance_;
    new (ptr) ::GetLoginBonusRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetLoginBonusRes::InitAsDefaultInstance();
}

void InitDefaultsGetLoginBonusRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetLoginBonusResImpl);
}

::google::protobuf::Metadata file_level_metadata[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginReq, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginReq, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginReq, int_set_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLogin, u_key_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginInfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginInfo, face_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginInfo, is_guest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginInfo, status_),
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginRes, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginRes, info_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Respose, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Respose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Respose, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SendMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SendMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SendMsg, msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SendEmoji, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SendEmoji, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SendEmoji, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvMsg, msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ModifyName, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ModifyName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ModifyName, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ModifyPlayerIcon, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ModifyPlayerIcon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ModifyPlayerIcon, playericon_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvEmoji, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvEmoji, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvEmoji, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeReq, phonenumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeReq, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeRes, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeRes, playeraccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeRes, password_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginReq, playeraccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginReq, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginRes, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginRes, info_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginOutRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginOutRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLoginOutRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerData, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerData, grade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerData, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerData, vip_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginBonusData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginBonusData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginBonusData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginBonusData, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginBonusData, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginBonusData, day_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetPlayerDataRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetPlayerDataRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetPlayerDataRes, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetPlayerDataRes, playerdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetPlayerDataRes, bonusdata_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetLoginBonusReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetLoginBonusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetLoginBonusReq, signtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetLoginBonusReq, day_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetLoginBonusRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetLoginBonusRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetLoginBonusRes, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetLoginBonusRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetLoginBonusRes, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetLoginBonusRes, bonusdata_),
  0,
  1,
  2,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::LoginReq)},
  { 13, 19, sizeof(::GuestLogin)},
  { 20, 31, sizeof(::GuestLoginInfo)},
  { 37, 44, sizeof(::GuestLoginRes)},
  { 46, 52, sizeof(::Respose)},
  { 53, 59, sizeof(::SendMsg)},
  { 60, 66, sizeof(::SendEmoji)},
  { 67, 73, sizeof(::RecvMsg)},
  { 74, 80, sizeof(::ModifyName)},
  { 81, 87, sizeof(::ModifyPlayerIcon)},
  { 88, 94, sizeof(::RecvEmoji)},
  { 95, 102, sizeof(::AccountUpgradeReq)},
  { 104, 112, sizeof(::AccountUpgradeRes)},
  { 115, 122, sizeof(::UserLoginReq)},
  { 124, 131, sizeof(::UserLoginRes)},
  { 133, 139, sizeof(::UserLoginOutRes)},
  { 140, 149, sizeof(::PlayerData)},
  { 153, 162, sizeof(::LoginBonusData)},
  { 166, 174, sizeof(::GetPlayerDataRes)},
  { 177, 184, sizeof(::GetLoginBonusReq)},
  { 186, 195, sizeof(::GetLoginBonusRes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GuestLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GuestLoginInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GuestLoginRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Respose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SendMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SendEmoji_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RecvMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ModifyName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ModifyPlayerIcon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RecvEmoji_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccountUpgradeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccountUpgradeRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserLoginRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserLoginOutRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LoginBonusData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetPlayerDataRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetLoginBonusReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetLoginBonusRes_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "game.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ngame.proto\"E\n\010LoginReq\022\014\n\004name\030\001 \002(\t\022\013"
      "\n\003age\030\002 \002(\005\022\r\n\005email\030\003 \002(\t\022\017\n\007int_set\030\004 "
      "\002(\005\"\033\n\nGuestLogin\022\r\n\005u_key\030\001 \002(\t\"h\n\016Gues"
      "tLoginInfo\022\013\n\003uid\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\013\n"
      "\003sex\030\003 \002(\005\022\014\n\004face\030\004 \002(\005\022\020\n\010is_guest\030\005 \002"
      "(\005\022\016\n\006status\030\006 \002(\005\"\?\n\rGuestLoginRes\022\017\n\007e"
      "rrcode\030\001 \002(\005\022\035\n\004info\030\002 \001(\0132\017.GuestLoginI"
      "nfo\"\031\n\007Respose\022\016\n\006status\030\001 \002(\005\"\026\n\007SendMs"
      "g\022\013\n\003msg\030\001 \002(\t\"\027\n\tSendEmoji\022\n\n\002id\030\001 \002(\005\""
      "\026\n\007RecvMsg\022\013\n\003msg\030\001 \002(\t\"\032\n\nModifyName\022\014\n"
      "\004name\030\001 \002(\t\"&\n\020ModifyPlayerIcon\022\022\n\nplaye"
      "ricon\030\001 \002(\005\"\027\n\tRecvEmoji\022\n\n\002id\030\001 \002(\005\":\n\021"
      "AccountUpgradeReq\022\023\n\013phonenumber\030\001 \002(\t\022\020"
      "\n\010password\030\002 \002(\t\"L\n\021AccountUpgradeRes\022\016\n"
      "\006status\030\001 \002(\005\022\025\n\rplayeraccount\030\002 \001(\t\022\020\n\010"
      "password\030\003 \001(\t\"7\n\014UserLoginReq\022\025\n\rplayer"
      "account\030\001 \002(\t\022\020\n\010password\030\002 \002(\t\">\n\014UserL"
      "oginRes\022\017\n\007errcode\030\001 \002(\005\022\035\n\004info\030\002 \001(\0132\017"
      ".GuestLoginInfo\"!\n\017UserLoginOutRes\022\016\n\006st"
      "atus\030\001 \002(\005\"D\n\nPlayerData\022\r\n\005money\030\001 \002(\005\022"
      "\r\n\005grade\030\002 \002(\005\022\013\n\003exp\030\003 \002(\005\022\013\n\003vip\030\004 \002(\005"
      "\"F\n\016LoginBonusData\022\n\n\002id\030\001 \002(\005\022\013\n\003num\030\002 "
      "\002(\005\022\016\n\006status\030\003 \002(\005\022\013\n\003day\030\004 \002(\005\"h\n\020GetP"
      "layerDataRes\022\017\n\007errcode\030\001 \002(\005\022\037\n\nplayerd"
      "ata\030\002 \001(\0132\013.PlayerData\022\"\n\tbonusdata\030\003 \003("
      "\0132\017.LoginBonusData\"1\n\020GetLoginBonusReq\022\020"
      "\n\010signtype\030\001 \002(\005\022\013\n\003day\030\002 \002(\005\"`\n\020GetLogi"
      "nBonusRes\022\017\n\007errcode\030\001 \002(\005\022\n\n\002id\030\002 \001(\005\022\013"
      "\n\003num\030\003 \001(\005\022\"\n\tbonusdata\030\004 \003(\0132\017.LoginBo"
      "nusData*I\n\005Stype\022\021\n\rINVALID_STYPE\020\000\022\010\n\004A"
      "uth\020\001\022\014\n\010TalkRoom\020\002\022\n\n\006System\020\003\022\t\n\005Logic"
      "\020\004*\301\003\n\003Cmd\022\017\n\013INVALID_CMD\020\000\022\r\n\teLoginReq"
      "\020\001\022\014\n\010eRespose\020\002\022\014\n\010eSendMsg\020\003\022\016\n\neSendE"
      "moji\020\004\022\014\n\010eRecvMsg\020\005\022\016\n\neRecvEmoji\020\006\022\023\n\017"
      "eExitDisconnect\020\007\022\017\n\013eGuestLogin\020\010\022\022\n\016eG"
      "uestLoginRes\020\t\022\020\n\014eDropByOther\020\n\022\017\n\013eMod"
      "ifyName\020\013\022\025\n\021eModifyPlayerIcon\020\014\022\026\n\022eAcc"
      "ountUpgradeReq\020\r\022\026\n\022eAccountUpgradeRes\020\016"
      "\022\021\n\reUserLoginReq\020\017\022\021\n\reUserLoginRes\020\020\022\024"
      "\n\020eUserLoginOutReq\020\021\022\024\n\020eUserLoginOutRes"
      "\020\022\022\025\n\021eGetPlayerDataReq\020\023\022\025\n\021eGetPlayerD"
      "ataRes\020\024\022\025\n\021eGetLoginBonusReq\020\025\022\025\n\021eGetL"
      "oginBonusRes\020\026"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1694);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_game_2eproto
const ::google::protobuf::EnumDescriptor* Stype_descriptor() {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_game_2eproto::file_level_enum_descriptors[0];
}
bool Stype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Cmd_descriptor() {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_game_2eproto::file_level_enum_descriptors[1];
}
bool Cmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kNameFieldNumber;
const int LoginReq::kAgeFieldNumber;
const int LoginReq::kEmailFieldNumber;
const int LoginReq::kIntSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsLoginReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginReq)
}
LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  ::memcpy(&age_, &from.age_,
    static_cast<size_t>(reinterpret_cast<char*>(&int_set_) -
    reinterpret_cast<char*>(&age_)) + sizeof(int_set_));
  // @@protoc_insertion_point(copy_constructor:LoginReq)
}

void LoginReq::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&age_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&int_set_) -
      reinterpret_cast<char*>(&age_)) + sizeof(int_set_));
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginReq& LoginReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsLoginReq();
  return *internal_default_instance();
}

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&age_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&int_set_) -
        reinterpret_cast<char*>(&age_)) + sizeof(int_set_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LoginReq.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 age = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string email = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LoginReq.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 int_set = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_int_set();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LoginReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 age = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->age(), output);
  }

  // required string email = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LoginReq.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  // required int32 int_set = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->int_set(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LoginReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 age = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->age(), target);
  }

  // required string email = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LoginReq.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  // required int32 int_set = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->int_set(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginReq)
  return target;
}

size_t LoginReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LoginReq)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_email()) {
    // required string email = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  if (has_age()) {
    // required int32 age = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->age());
  }

  if (has_int_set()) {
    // required int32 int_set = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int_set());
  }

  return total_size;
}
size_t LoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string email = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());

    // required int32 age = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->age());

    // required int32 int_set = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int_set());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000004u) {
      age_ = from.age_;
    }
    if (cached_has_bits & 0x00000008u) {
      int_set_ = from.int_set_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  using std::swap;
  name_.Swap(&other->name_);
  email_.Swap(&other->email_);
  swap(age_, other->age_);
  swap(int_set_, other->int_set_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GuestLogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuestLogin::kUKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuestLogin::GuestLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGuestLogin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuestLogin)
}
GuestLogin::GuestLogin(const GuestLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  u_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_u_key()) {
    u_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.u_key_);
  }
  // @@protoc_insertion_point(copy_constructor:GuestLogin)
}

void GuestLogin::SharedCtor() {
  _cached_size_ = 0;
  u_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GuestLogin::~GuestLogin() {
  // @@protoc_insertion_point(destructor:GuestLogin)
  SharedDtor();
}

void GuestLogin::SharedDtor() {
  u_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuestLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuestLogin::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuestLogin& GuestLogin::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGuestLogin();
  return *internal_default_instance();
}

GuestLogin* GuestLogin::New(::google::protobuf::Arena* arena) const {
  GuestLogin* n = new GuestLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuestLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:GuestLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!u_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*u_key_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuestLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuestLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string u_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_u_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->u_key().data(), static_cast<int>(this->u_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuestLogin.u_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuestLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuestLogin)
  return false;
#undef DO_
}

void GuestLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuestLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string u_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->u_key().data(), static_cast<int>(this->u_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestLogin.u_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->u_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuestLogin)
}

::google::protobuf::uint8* GuestLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuestLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string u_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->u_key().data(), static_cast<int>(this->u_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestLogin.u_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->u_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuestLogin)
  return target;
}

size_t GuestLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuestLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string u_key = 1;
  if (has_u_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->u_key());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuestLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuestLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const GuestLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuestLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuestLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuestLogin)
    MergeFrom(*source);
  }
}

void GuestLogin::MergeFrom(const GuestLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuestLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_u_key()) {
    set_has_u_key();
    u_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.u_key_);
  }
}

void GuestLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuestLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuestLogin::CopyFrom(const GuestLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuestLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuestLogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GuestLogin::Swap(GuestLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuestLogin::InternalSwap(GuestLogin* other) {
  using std::swap;
  u_key_.Swap(&other->u_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuestLogin::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GuestLoginInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuestLoginInfo::kUidFieldNumber;
const int GuestLoginInfo::kNameFieldNumber;
const int GuestLoginInfo::kSexFieldNumber;
const int GuestLoginInfo::kFaceFieldNumber;
const int GuestLoginInfo::kIsGuestFieldNumber;
const int GuestLoginInfo::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuestLoginInfo::GuestLoginInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGuestLoginInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuestLoginInfo)
}
GuestLoginInfo::GuestLoginInfo(const GuestLoginInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:GuestLoginInfo)
}

void GuestLoginInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(status_));
}

GuestLoginInfo::~GuestLoginInfo() {
  // @@protoc_insertion_point(destructor:GuestLoginInfo)
  SharedDtor();
}

void GuestLoginInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuestLoginInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuestLoginInfo::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuestLoginInfo& GuestLoginInfo::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGuestLoginInfo();
  return *internal_default_instance();
}

GuestLoginInfo* GuestLoginInfo::New(::google::protobuf::Arena* arena) const {
  GuestLoginInfo* n = new GuestLoginInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuestLoginInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GuestLoginInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&uid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&status_) -
        reinterpret_cast<char*>(&uid_)) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuestLoginInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuestLoginInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuestLoginInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 face = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_face();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &face_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 is_guest = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_guest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuestLoginInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuestLoginInfo)
  return false;
#undef DO_
}

void GuestLoginInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuestLoginInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestLoginInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required int32 sex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sex(), output);
  }

  // required int32 face = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->face(), output);
  }

  // required int32 is_guest = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->is_guest(), output);
  }

  // required int32 status = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuestLoginInfo)
}

::google::protobuf::uint8* GuestLoginInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuestLoginInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestLoginInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required int32 sex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sex(), target);
  }

  // required int32 face = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->face(), target);
  }

  // required int32 is_guest = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->is_guest(), target);
  }

  // required int32 status = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuestLoginInfo)
  return target;
}

size_t GuestLoginInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GuestLoginInfo)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_uid()) {
    // required int32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  if (has_sex()) {
    // required int32 sex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  if (has_face()) {
    // required int32 face = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->face());
  }

  if (has_is_guest()) {
    // required int32 is_guest = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_guest());
  }

  if (has_status()) {
    // required int32 status = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  return total_size;
}
size_t GuestLoginInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuestLoginInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());

    // required int32 sex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());

    // required int32 face = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->face());

    // required int32 is_guest = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_guest());

    // required int32 status = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuestLoginInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuestLoginInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GuestLoginInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuestLoginInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuestLoginInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuestLoginInfo)
    MergeFrom(*source);
  }
}

void GuestLoginInfo::MergeFrom(const GuestLoginInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuestLoginInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000004u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000008u) {
      face_ = from.face_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_guest_ = from.is_guest_;
    }
    if (cached_has_bits & 0x00000020u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuestLoginInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuestLoginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuestLoginInfo::CopyFrom(const GuestLoginInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuestLoginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuestLoginInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void GuestLoginInfo::Swap(GuestLoginInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuestLoginInfo::InternalSwap(GuestLoginInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(uid_, other->uid_);
  swap(sex_, other->sex_);
  swap(face_, other->face_);
  swap(is_guest_, other->is_guest_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuestLoginInfo::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GuestLoginRes::InitAsDefaultInstance() {
  ::_GuestLoginRes_default_instance_._instance.get_mutable()->info_ = const_cast< ::GuestLoginInfo*>(
      ::GuestLoginInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuestLoginRes::kErrcodeFieldNumber;
const int GuestLoginRes::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuestLoginRes::GuestLoginRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGuestLoginRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuestLoginRes)
}
GuestLoginRes::GuestLoginRes(const GuestLoginRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::GuestLoginInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:GuestLoginRes)
}

void GuestLoginRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&info_)) + sizeof(errcode_));
}

GuestLoginRes::~GuestLoginRes() {
  // @@protoc_insertion_point(destructor:GuestLoginRes)
  SharedDtor();
}

void GuestLoginRes::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void GuestLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuestLoginRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuestLoginRes& GuestLoginRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGuestLoginRes();
  return *internal_default_instance();
}

GuestLoginRes* GuestLoginRes::New(::google::protobuf::Arena* arena) const {
  GuestLoginRes* n = new GuestLoginRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuestLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:GuestLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuestLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuestLoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .GuestLoginInfo info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuestLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuestLoginRes)
  return false;
#undef DO_
}

void GuestLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuestLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errcode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errcode(), output);
  }

  // optional .GuestLoginInfo info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuestLoginRes)
}

::google::protobuf::uint8* GuestLoginRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuestLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errcode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errcode(), target);
  }

  // optional .GuestLoginInfo info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->info_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuestLoginRes)
  return target;
}

size_t GuestLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuestLoginRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 errcode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errcode());
  }
  // optional .GuestLoginInfo info = 2;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuestLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuestLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GuestLoginRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuestLoginRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuestLoginRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuestLoginRes)
    MergeFrom(*source);
  }
}

void GuestLoginRes::MergeFrom(const GuestLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuestLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_info()->::GuestLoginInfo::MergeFrom(from.info());
    }
    if (cached_has_bits & 0x00000002u) {
      errcode_ = from.errcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuestLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuestLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuestLoginRes::CopyFrom(const GuestLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuestLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuestLoginRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_info()) {
    if (!this->info_->IsInitialized()) return false;
  }
  return true;
}

void GuestLoginRes::Swap(GuestLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuestLoginRes::InternalSwap(GuestLoginRes* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(errcode_, other->errcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuestLoginRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Respose::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Respose::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Respose::Respose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsRespose();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Respose)
}
Respose::Respose(const Respose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:Respose)
}

void Respose::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

Respose::~Respose() {
  // @@protoc_insertion_point(destructor:Respose)
  SharedDtor();
}

void Respose::SharedDtor() {
}

void Respose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Respose::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Respose& Respose::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsRespose();
  return *internal_default_instance();
}

Respose* Respose::New(::google::protobuf::Arena* arena) const {
  Respose* n = new Respose;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Respose::Clear() {
// @@protoc_insertion_point(message_clear_start:Respose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Respose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Respose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Respose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Respose)
  return false;
#undef DO_
}

void Respose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Respose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Respose)
}

::google::protobuf::uint8* Respose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Respose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Respose)
  return target;
}

size_t Respose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Respose)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Respose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Respose)
  GOOGLE_DCHECK_NE(&from, this);
  const Respose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Respose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Respose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Respose)
    MergeFrom(*source);
  }
}

void Respose::MergeFrom(const Respose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Respose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void Respose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Respose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Respose::CopyFrom(const Respose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Respose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Respose::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Respose::Swap(Respose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Respose::InternalSwap(Respose* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Respose::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMsg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMsg::SendMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsSendMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SendMsg)
}
SendMsg::SendMsg(const SendMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:SendMsg)
}

void SendMsg::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendMsg::~SendMsg() {
  // @@protoc_insertion_point(destructor:SendMsg)
  SharedDtor();
}

void SendMsg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendMsg::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendMsg& SendMsg::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsSendMsg();
  return *internal_default_instance();
}

SendMsg* SendMsg::New(::google::protobuf::Arena* arena) const {
  SendMsg* n = new SendMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:SendMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*msg_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SendMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SendMsg.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SendMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SendMsg)
  return false;
#undef DO_
}

void SendMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SendMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SendMsg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SendMsg)
}

::google::protobuf::uint8* SendMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SendMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SendMsg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SendMsg)
  return target;
}

size_t SendMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SendMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string msg = 1;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SendMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SendMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SendMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SendMsg)
    MergeFrom(*source);
  }
}

void SendMsg::MergeFrom(const SendMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SendMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    set_has_msg();
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void SendMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SendMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMsg::CopyFrom(const SendMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SendMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SendMsg::Swap(SendMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMsg::InternalSwap(SendMsg* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendMsg::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendEmoji::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendEmoji::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendEmoji::SendEmoji()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsSendEmoji();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SendEmoji)
}
SendEmoji::SendEmoji(const SendEmoji& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:SendEmoji)
}

void SendEmoji::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

SendEmoji::~SendEmoji() {
  // @@protoc_insertion_point(destructor:SendEmoji)
  SharedDtor();
}

void SendEmoji::SharedDtor() {
}

void SendEmoji::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendEmoji::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendEmoji& SendEmoji::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsSendEmoji();
  return *internal_default_instance();
}

SendEmoji* SendEmoji::New(::google::protobuf::Arena* arena) const {
  SendEmoji* n = new SendEmoji;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendEmoji::Clear() {
// @@protoc_insertion_point(message_clear_start:SendEmoji)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendEmoji::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SendEmoji)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SendEmoji)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SendEmoji)
  return false;
#undef DO_
}

void SendEmoji::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SendEmoji)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SendEmoji)
}

::google::protobuf::uint8* SendEmoji::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SendEmoji)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SendEmoji)
  return target;
}

size_t SendEmoji::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SendEmoji)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendEmoji::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SendEmoji)
  GOOGLE_DCHECK_NE(&from, this);
  const SendEmoji* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendEmoji>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SendEmoji)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SendEmoji)
    MergeFrom(*source);
  }
}

void SendEmoji::MergeFrom(const SendEmoji& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SendEmoji)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void SendEmoji::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SendEmoji)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendEmoji::CopyFrom(const SendEmoji& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SendEmoji)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendEmoji::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SendEmoji::Swap(SendEmoji* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendEmoji::InternalSwap(SendEmoji* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendEmoji::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecvMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvMsg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvMsg::RecvMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsRecvMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RecvMsg)
}
RecvMsg::RecvMsg(const RecvMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:RecvMsg)
}

void RecvMsg::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RecvMsg::~RecvMsg() {
  // @@protoc_insertion_point(destructor:RecvMsg)
  SharedDtor();
}

void RecvMsg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecvMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecvMsg::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecvMsg& RecvMsg::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsRecvMsg();
  return *internal_default_instance();
}

RecvMsg* RecvMsg::New(::google::protobuf::Arena* arena) const {
  RecvMsg* n = new RecvMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecvMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:RecvMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*msg_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecvMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RecvMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RecvMsg.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RecvMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RecvMsg)
  return false;
#undef DO_
}

void RecvMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RecvMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RecvMsg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RecvMsg)
}

::google::protobuf::uint8* RecvMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RecvMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RecvMsg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RecvMsg)
  return target;
}

size_t RecvMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RecvMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string msg = 1;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecvMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RecvMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RecvMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RecvMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RecvMsg)
    MergeFrom(*source);
  }
}

void RecvMsg::MergeFrom(const RecvMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RecvMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    set_has_msg();
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void RecvMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RecvMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvMsg::CopyFrom(const RecvMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RecvMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RecvMsg::Swap(RecvMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecvMsg::InternalSwap(RecvMsg* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecvMsg::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyName::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyName::ModifyName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsModifyName();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ModifyName)
}
ModifyName::ModifyName(const ModifyName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ModifyName)
}

void ModifyName::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ModifyName::~ModifyName() {
  // @@protoc_insertion_point(destructor:ModifyName)
  SharedDtor();
}

void ModifyName::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyName::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyName& ModifyName::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsModifyName();
  return *internal_default_instance();
}

ModifyName* ModifyName::New(::google::protobuf::Arena* arena) const {
  ModifyName* n = new ModifyName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyName::Clear() {
// @@protoc_insertion_point(message_clear_start:ModifyName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModifyName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ModifyName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ModifyName.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ModifyName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ModifyName)
  return false;
#undef DO_
}

void ModifyName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ModifyName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ModifyName.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ModifyName)
}

::google::protobuf::uint8* ModifyName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ModifyName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ModifyName.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ModifyName)
  return target;
}

size_t ModifyName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ModifyName)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ModifyName)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ModifyName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ModifyName)
    MergeFrom(*source);
  }
}

void ModifyName::MergeFrom(const ModifyName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ModifyName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ModifyName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ModifyName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyName::CopyFrom(const ModifyName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ModifyName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyName::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ModifyName::Swap(ModifyName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyName::InternalSwap(ModifyName* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyName::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyPlayerIcon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyPlayerIcon::kPlayericonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyPlayerIcon::ModifyPlayerIcon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsModifyPlayerIcon();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ModifyPlayerIcon)
}
ModifyPlayerIcon::ModifyPlayerIcon(const ModifyPlayerIcon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playericon_ = from.playericon_;
  // @@protoc_insertion_point(copy_constructor:ModifyPlayerIcon)
}

void ModifyPlayerIcon::SharedCtor() {
  _cached_size_ = 0;
  playericon_ = 0;
}

ModifyPlayerIcon::~ModifyPlayerIcon() {
  // @@protoc_insertion_point(destructor:ModifyPlayerIcon)
  SharedDtor();
}

void ModifyPlayerIcon::SharedDtor() {
}

void ModifyPlayerIcon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyPlayerIcon::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyPlayerIcon& ModifyPlayerIcon::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsModifyPlayerIcon();
  return *internal_default_instance();
}

ModifyPlayerIcon* ModifyPlayerIcon::New(::google::protobuf::Arena* arena) const {
  ModifyPlayerIcon* n = new ModifyPlayerIcon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyPlayerIcon::Clear() {
// @@protoc_insertion_point(message_clear_start:ModifyPlayerIcon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playericon_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModifyPlayerIcon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ModifyPlayerIcon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 playericon = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playericon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playericon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ModifyPlayerIcon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ModifyPlayerIcon)
  return false;
#undef DO_
}

void ModifyPlayerIcon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ModifyPlayerIcon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 playericon = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playericon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ModifyPlayerIcon)
}

::google::protobuf::uint8* ModifyPlayerIcon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ModifyPlayerIcon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 playericon = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playericon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ModifyPlayerIcon)
  return target;
}

size_t ModifyPlayerIcon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ModifyPlayerIcon)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 playericon = 1;
  if (has_playericon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playericon());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyPlayerIcon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ModifyPlayerIcon)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyPlayerIcon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyPlayerIcon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ModifyPlayerIcon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ModifyPlayerIcon)
    MergeFrom(*source);
  }
}

void ModifyPlayerIcon::MergeFrom(const ModifyPlayerIcon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ModifyPlayerIcon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playericon()) {
    set_playericon(from.playericon());
  }
}

void ModifyPlayerIcon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ModifyPlayerIcon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyPlayerIcon::CopyFrom(const ModifyPlayerIcon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ModifyPlayerIcon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyPlayerIcon::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ModifyPlayerIcon::Swap(ModifyPlayerIcon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyPlayerIcon::InternalSwap(ModifyPlayerIcon* other) {
  using std::swap;
  swap(playericon_, other->playericon_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyPlayerIcon::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecvEmoji::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvEmoji::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvEmoji::RecvEmoji()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsRecvEmoji();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RecvEmoji)
}
RecvEmoji::RecvEmoji(const RecvEmoji& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:RecvEmoji)
}

void RecvEmoji::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

RecvEmoji::~RecvEmoji() {
  // @@protoc_insertion_point(destructor:RecvEmoji)
  SharedDtor();
}

void RecvEmoji::SharedDtor() {
}

void RecvEmoji::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecvEmoji::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecvEmoji& RecvEmoji::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsRecvEmoji();
  return *internal_default_instance();
}

RecvEmoji* RecvEmoji::New(::google::protobuf::Arena* arena) const {
  RecvEmoji* n = new RecvEmoji;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecvEmoji::Clear() {
// @@protoc_insertion_point(message_clear_start:RecvEmoji)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecvEmoji::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RecvEmoji)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RecvEmoji)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RecvEmoji)
  return false;
#undef DO_
}

void RecvEmoji::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RecvEmoji)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RecvEmoji)
}

::google::protobuf::uint8* RecvEmoji::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RecvEmoji)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RecvEmoji)
  return target;
}

size_t RecvEmoji::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RecvEmoji)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecvEmoji::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RecvEmoji)
  GOOGLE_DCHECK_NE(&from, this);
  const RecvEmoji* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvEmoji>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RecvEmoji)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RecvEmoji)
    MergeFrom(*source);
  }
}

void RecvEmoji::MergeFrom(const RecvEmoji& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RecvEmoji)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void RecvEmoji::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RecvEmoji)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvEmoji::CopyFrom(const RecvEmoji& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RecvEmoji)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvEmoji::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RecvEmoji::Swap(RecvEmoji* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecvEmoji::InternalSwap(RecvEmoji* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecvEmoji::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountUpgradeReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountUpgradeReq::kPhonenumberFieldNumber;
const int AccountUpgradeReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountUpgradeReq::AccountUpgradeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsAccountUpgradeReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountUpgradeReq)
}
AccountUpgradeReq::AccountUpgradeReq(const AccountUpgradeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phonenumber()) {
    phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:AccountUpgradeReq)
}

void AccountUpgradeReq::SharedCtor() {
  _cached_size_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountUpgradeReq::~AccountUpgradeReq() {
  // @@protoc_insertion_point(destructor:AccountUpgradeReq)
  SharedDtor();
}

void AccountUpgradeReq::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountUpgradeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountUpgradeReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountUpgradeReq& AccountUpgradeReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsAccountUpgradeReq();
  return *internal_default_instance();
}

AccountUpgradeReq* AccountUpgradeReq::New(::google::protobuf::Arena* arena) const {
  AccountUpgradeReq* n = new AccountUpgradeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountUpgradeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountUpgradeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!phonenumber_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phonenumber_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountUpgradeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountUpgradeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string phonenumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), static_cast<int>(this->phonenumber().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountUpgradeReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountUpgradeReq.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountUpgradeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountUpgradeReq)
  return false;
#undef DO_
}

void AccountUpgradeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountUpgradeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string phonenumber = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), static_cast<int>(this->phonenumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->phonenumber(), output);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountUpgradeReq)
}

::google::protobuf::uint8* AccountUpgradeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountUpgradeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string phonenumber = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), static_cast<int>(this->phonenumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->phonenumber(), target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountUpgradeReq)
  return target;
}

size_t AccountUpgradeReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccountUpgradeReq)
  size_t total_size = 0;

  if (has_phonenumber()) {
    // required string phonenumber = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phonenumber());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t AccountUpgradeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountUpgradeReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string phonenumber = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phonenumber());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountUpgradeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountUpgradeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountUpgradeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountUpgradeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountUpgradeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountUpgradeReq)
    MergeFrom(*source);
  }
}

void AccountUpgradeReq::MergeFrom(const AccountUpgradeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountUpgradeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void AccountUpgradeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountUpgradeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountUpgradeReq::CopyFrom(const AccountUpgradeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountUpgradeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountUpgradeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AccountUpgradeReq::Swap(AccountUpgradeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountUpgradeReq::InternalSwap(AccountUpgradeReq* other) {
  using std::swap;
  phonenumber_.Swap(&other->phonenumber_);
  password_.Swap(&other->password_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountUpgradeReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountUpgradeRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountUpgradeRes::kStatusFieldNumber;
const int AccountUpgradeRes::kPlayeraccountFieldNumber;
const int AccountUpgradeRes::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountUpgradeRes::AccountUpgradeRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsAccountUpgradeRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountUpgradeRes)
}
AccountUpgradeRes::AccountUpgradeRes(const AccountUpgradeRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playeraccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playeraccount()) {
    playeraccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playeraccount_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:AccountUpgradeRes)
}

void AccountUpgradeRes::SharedCtor() {
  _cached_size_ = 0;
  playeraccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

AccountUpgradeRes::~AccountUpgradeRes() {
  // @@protoc_insertion_point(destructor:AccountUpgradeRes)
  SharedDtor();
}

void AccountUpgradeRes::SharedDtor() {
  playeraccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountUpgradeRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountUpgradeRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountUpgradeRes& AccountUpgradeRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsAccountUpgradeRes();
  return *internal_default_instance();
}

AccountUpgradeRes* AccountUpgradeRes::New(::google::protobuf::Arena* arena) const {
  AccountUpgradeRes* n = new AccountUpgradeRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountUpgradeRes::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountUpgradeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!playeraccount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playeraccount_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountUpgradeRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountUpgradeRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string playeraccount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playeraccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playeraccount().data(), static_cast<int>(this->playeraccount().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountUpgradeRes.playeraccount");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountUpgradeRes.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountUpgradeRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountUpgradeRes)
  return false;
#undef DO_
}

void AccountUpgradeRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountUpgradeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional string playeraccount = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playeraccount().data(), static_cast<int>(this->playeraccount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeRes.playeraccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->playeraccount(), output);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeRes.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountUpgradeRes)
}

::google::protobuf::uint8* AccountUpgradeRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountUpgradeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional string playeraccount = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playeraccount().data(), static_cast<int>(this->playeraccount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeRes.playeraccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->playeraccount(), target);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeRes.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountUpgradeRes)
  return target;
}

size_t AccountUpgradeRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountUpgradeRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string playeraccount = 2;
    if (has_playeraccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playeraccount());
    }

    // optional string password = 3;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountUpgradeRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountUpgradeRes)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountUpgradeRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountUpgradeRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountUpgradeRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountUpgradeRes)
    MergeFrom(*source);
  }
}

void AccountUpgradeRes::MergeFrom(const AccountUpgradeRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountUpgradeRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playeraccount();
      playeraccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playeraccount_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AccountUpgradeRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountUpgradeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountUpgradeRes::CopyFrom(const AccountUpgradeRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountUpgradeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountUpgradeRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void AccountUpgradeRes::Swap(AccountUpgradeRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountUpgradeRes::InternalSwap(AccountUpgradeRes* other) {
  using std::swap;
  playeraccount_.Swap(&other->playeraccount_);
  password_.Swap(&other->password_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountUpgradeRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginReq::kPlayeraccountFieldNumber;
const int UserLoginReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginReq::UserLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserLoginReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserLoginReq)
}
UserLoginReq::UserLoginReq(const UserLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playeraccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playeraccount()) {
    playeraccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playeraccount_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:UserLoginReq)
}

void UserLoginReq::SharedCtor() {
  _cached_size_ = 0;
  playeraccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserLoginReq::~UserLoginReq() {
  // @@protoc_insertion_point(destructor:UserLoginReq)
  SharedDtor();
}

void UserLoginReq::SharedDtor() {
  playeraccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoginReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLoginReq& UserLoginReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserLoginReq();
  return *internal_default_instance();
}

UserLoginReq* UserLoginReq::New(::google::protobuf::Arena* arena) const {
  UserLoginReq* n = new UserLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UserLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!playeraccount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playeraccount_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string playeraccount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playeraccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playeraccount().data(), static_cast<int>(this->playeraccount().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserLoginReq.playeraccount");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserLoginReq.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserLoginReq)
  return false;
#undef DO_
}

void UserLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string playeraccount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playeraccount().data(), static_cast<int>(this->playeraccount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserLoginReq.playeraccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playeraccount(), output);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserLoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserLoginReq)
}

::google::protobuf::uint8* UserLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string playeraccount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playeraccount().data(), static_cast<int>(this->playeraccount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserLoginReq.playeraccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playeraccount(), target);
  }

  // required string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserLoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserLoginReq)
  return target;
}

size_t UserLoginReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UserLoginReq)
  size_t total_size = 0;

  if (has_playeraccount()) {
    // required string playeraccount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playeraccount());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t UserLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserLoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string playeraccount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playeraccount());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserLoginReq)
    MergeFrom(*source);
  }
}

void UserLoginReq::MergeFrom(const UserLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playeraccount();
      playeraccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playeraccount_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void UserLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginReq::CopyFrom(const UserLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UserLoginReq::Swap(UserLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginReq::InternalSwap(UserLoginReq* other) {
  using std::swap;
  playeraccount_.Swap(&other->playeraccount_);
  password_.Swap(&other->password_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserLoginReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLoginRes::InitAsDefaultInstance() {
  ::_UserLoginRes_default_instance_._instance.get_mutable()->info_ = const_cast< ::GuestLoginInfo*>(
      ::GuestLoginInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginRes::kErrcodeFieldNumber;
const int UserLoginRes::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginRes::UserLoginRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserLoginRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserLoginRes)
}
UserLoginRes::UserLoginRes(const UserLoginRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::GuestLoginInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:UserLoginRes)
}

void UserLoginRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&info_)) + sizeof(errcode_));
}

UserLoginRes::~UserLoginRes() {
  // @@protoc_insertion_point(destructor:UserLoginRes)
  SharedDtor();
}

void UserLoginRes::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void UserLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoginRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLoginRes& UserLoginRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserLoginRes();
  return *internal_default_instance();
}

UserLoginRes* UserLoginRes::New(::google::protobuf::Arena* arena) const {
  UserLoginRes* n = new UserLoginRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:UserLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserLoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .GuestLoginInfo info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserLoginRes)
  return false;
#undef DO_
}

void UserLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errcode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errcode(), output);
  }

  // optional .GuestLoginInfo info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserLoginRes)
}

::google::protobuf::uint8* UserLoginRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errcode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errcode(), target);
  }

  // optional .GuestLoginInfo info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->info_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserLoginRes)
  return target;
}

size_t UserLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserLoginRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 errcode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errcode());
  }
  // optional .GuestLoginInfo info = 2;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLoginRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLoginRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserLoginRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserLoginRes)
    MergeFrom(*source);
  }
}

void UserLoginRes::MergeFrom(const UserLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_info()->::GuestLoginInfo::MergeFrom(from.info());
    }
    if (cached_has_bits & 0x00000002u) {
      errcode_ = from.errcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginRes::CopyFrom(const UserLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_info()) {
    if (!this->info_->IsInitialized()) return false;
  }
  return true;
}

void UserLoginRes::Swap(UserLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginRes::InternalSwap(UserLoginRes* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(errcode_, other->errcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserLoginRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLoginOutRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginOutRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginOutRes::UserLoginOutRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserLoginOutRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserLoginOutRes)
}
UserLoginOutRes::UserLoginOutRes(const UserLoginOutRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UserLoginOutRes)
}

void UserLoginOutRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

UserLoginOutRes::~UserLoginOutRes() {
  // @@protoc_insertion_point(destructor:UserLoginOutRes)
  SharedDtor();
}

void UserLoginOutRes::SharedDtor() {
}

void UserLoginOutRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoginOutRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLoginOutRes& UserLoginOutRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserLoginOutRes();
  return *internal_default_instance();
}

UserLoginOutRes* UserLoginOutRes::New(::google::protobuf::Arena* arena) const {
  UserLoginOutRes* n = new UserLoginOutRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserLoginOutRes::Clear() {
// @@protoc_insertion_point(message_clear_start:UserLoginOutRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserLoginOutRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserLoginOutRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserLoginOutRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserLoginOutRes)
  return false;
#undef DO_
}

void UserLoginOutRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserLoginOutRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserLoginOutRes)
}

::google::protobuf::uint8* UserLoginOutRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserLoginOutRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserLoginOutRes)
  return target;
}

size_t UserLoginOutRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserLoginOutRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginOutRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserLoginOutRes)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLoginOutRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLoginOutRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserLoginOutRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserLoginOutRes)
    MergeFrom(*source);
  }
}

void UserLoginOutRes::MergeFrom(const UserLoginOutRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserLoginOutRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void UserLoginOutRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserLoginOutRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginOutRes::CopyFrom(const UserLoginOutRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserLoginOutRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginOutRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UserLoginOutRes::Swap(UserLoginOutRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginOutRes::InternalSwap(UserLoginOutRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserLoginOutRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerData::kMoneyFieldNumber;
const int PlayerData::kGradeFieldNumber;
const int PlayerData::kExpFieldNumber;
const int PlayerData::kVipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerData::PlayerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsPlayerData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerData)
}
PlayerData::PlayerData(const PlayerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    static_cast<size_t>(reinterpret_cast<char*>(&vip_) -
    reinterpret_cast<char*>(&money_)) + sizeof(vip_));
  // @@protoc_insertion_point(copy_constructor:PlayerData)
}

void PlayerData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vip_) -
      reinterpret_cast<char*>(&money_)) + sizeof(vip_));
}

PlayerData::~PlayerData() {
  // @@protoc_insertion_point(destructor:PlayerData)
  SharedDtor();
}

void PlayerData::SharedDtor() {
}

void PlayerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerData::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerData& PlayerData::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsPlayerData();
  return *internal_default_instance();
}

PlayerData* PlayerData::New(::google::protobuf::Arena* arena) const {
  PlayerData* n = new PlayerData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&money_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vip_) -
        reinterpret_cast<char*>(&money_)) + sizeof(vip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 money = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 grade = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_grade();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 exp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 vip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_vip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerData)
  return false;
#undef DO_
}

void PlayerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 money = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->money(), output);
  }

  // required int32 grade = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->grade(), output);
  }

  // required int32 exp = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exp(), output);
  }

  // required int32 vip = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerData)
}

::google::protobuf::uint8* PlayerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 money = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->money(), target);
  }

  // required int32 grade = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->grade(), target);
  }

  // required int32 exp = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exp(), target);
  }

  // required int32 vip = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerData)
  return target;
}

size_t PlayerData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PlayerData)
  size_t total_size = 0;

  if (has_money()) {
    // required int32 money = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());
  }

  if (has_grade()) {
    // required int32 grade = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->grade());
  }

  if (has_exp()) {
    // required int32 exp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  if (has_vip()) {
    // required int32 vip = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vip());
  }

  return total_size;
}
size_t PlayerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 money = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());

    // required int32 grade = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->grade());

    // required int32 exp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());

    // required int32 vip = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vip());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerData)
    MergeFrom(*source);
  }
}

void PlayerData::MergeFrom(const PlayerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      grade_ = from.grade_;
    }
    if (cached_has_bits & 0x00000004u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00000008u) {
      vip_ = from.vip_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerData::CopyFrom(const PlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void PlayerData::Swap(PlayerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerData::InternalSwap(PlayerData* other) {
  using std::swap;
  swap(money_, other->money_);
  swap(grade_, other->grade_);
  swap(exp_, other->exp_);
  swap(vip_, other->vip_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerData::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginBonusData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginBonusData::kIdFieldNumber;
const int LoginBonusData::kNumFieldNumber;
const int LoginBonusData::kStatusFieldNumber;
const int LoginBonusData::kDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginBonusData::LoginBonusData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsLoginBonusData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginBonusData)
}
LoginBonusData::LoginBonusData(const LoginBonusData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&day_) -
    reinterpret_cast<char*>(&id_)) + sizeof(day_));
  // @@protoc_insertion_point(copy_constructor:LoginBonusData)
}

void LoginBonusData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&day_) -
      reinterpret_cast<char*>(&id_)) + sizeof(day_));
}

LoginBonusData::~LoginBonusData() {
  // @@protoc_insertion_point(destructor:LoginBonusData)
  SharedDtor();
}

void LoginBonusData::SharedDtor() {
}

void LoginBonusData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginBonusData::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginBonusData& LoginBonusData::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsLoginBonusData();
  return *internal_default_instance();
}

LoginBonusData* LoginBonusData::New(::google::protobuf::Arena* arena) const {
  LoginBonusData* n = new LoginBonusData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginBonusData::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginBonusData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&day_) -
        reinterpret_cast<char*>(&id_)) + sizeof(day_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginBonusData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginBonusData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 day = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginBonusData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginBonusData)
  return false;
#undef DO_
}

void LoginBonusData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginBonusData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  // required int32 status = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // required int32 day = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->day(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginBonusData)
}

::google::protobuf::uint8* LoginBonusData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginBonusData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  // required int32 status = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // required int32 day = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->day(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginBonusData)
  return target;
}

size_t LoginBonusData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LoginBonusData)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_num()) {
    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  if (has_status()) {
    // required int32 status = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  if (has_day()) {
    // required int32 day = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->day());
  }

  return total_size;
}
size_t LoginBonusData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginBonusData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());

    // required int32 status = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());

    // required int32 day = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->day());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginBonusData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginBonusData)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginBonusData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginBonusData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginBonusData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginBonusData)
    MergeFrom(*source);
  }
}

void LoginBonusData::MergeFrom(const LoginBonusData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginBonusData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000008u) {
      day_ = from.day_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoginBonusData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginBonusData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginBonusData::CopyFrom(const LoginBonusData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginBonusData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginBonusData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void LoginBonusData::Swap(LoginBonusData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginBonusData::InternalSwap(LoginBonusData* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  swap(status_, other->status_);
  swap(day_, other->day_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginBonusData::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPlayerDataRes::InitAsDefaultInstance() {
  ::_GetPlayerDataRes_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::PlayerData*>(
      ::PlayerData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerDataRes::kErrcodeFieldNumber;
const int GetPlayerDataRes::kPlayerdataFieldNumber;
const int GetPlayerDataRes::kBonusdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerDataRes::GetPlayerDataRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGetPlayerDataRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetPlayerDataRes)
}
GetPlayerDataRes::GetPlayerDataRes(const GetPlayerDataRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      bonusdata_(from.bonusdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playerdata()) {
    playerdata_ = new ::PlayerData(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:GetPlayerDataRes)
}

void GetPlayerDataRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&playerdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&playerdata_)) + sizeof(errcode_));
}

GetPlayerDataRes::~GetPlayerDataRes() {
  // @@protoc_insertion_point(destructor:GetPlayerDataRes)
  SharedDtor();
}

void GetPlayerDataRes::SharedDtor() {
  if (this != internal_default_instance()) delete playerdata_;
}

void GetPlayerDataRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerDataRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerDataRes& GetPlayerDataRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGetPlayerDataRes();
  return *internal_default_instance();
}

GetPlayerDataRes* GetPlayerDataRes::New(::google::protobuf::Arena* arena) const {
  GetPlayerDataRes* n = new GetPlayerDataRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerDataRes::Clear() {
// @@protoc_insertion_point(message_clear_start:GetPlayerDataRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bonusdata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(playerdata_ != NULL);
    playerdata_->Clear();
  }
  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetPlayerDataRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetPlayerDataRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PlayerData playerdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .LoginBonusData bonusdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_bonusdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetPlayerDataRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetPlayerDataRes)
  return false;
#undef DO_
}

void GetPlayerDataRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetPlayerDataRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errcode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errcode(), output);
  }

  // optional .PlayerData playerdata = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->playerdata_, output);
  }

  // repeated .LoginBonusData bonusdata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bonusdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bonusdata(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetPlayerDataRes)
}

::google::protobuf::uint8* GetPlayerDataRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetPlayerDataRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errcode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errcode(), target);
  }

  // optional .PlayerData playerdata = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->playerdata_, deterministic, target);
  }

  // repeated .LoginBonusData bonusdata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bonusdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->bonusdata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetPlayerDataRes)
  return target;
}

size_t GetPlayerDataRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetPlayerDataRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 errcode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errcode());
  }
  // repeated .LoginBonusData bonusdata = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->bonusdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bonusdata(static_cast<int>(i)));
    }
  }

  // optional .PlayerData playerdata = 2;
  if (has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->playerdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerDataRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetPlayerDataRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerDataRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerDataRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetPlayerDataRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetPlayerDataRes)
    MergeFrom(*source);
  }
}

void GetPlayerDataRes::MergeFrom(const GetPlayerDataRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetPlayerDataRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bonusdata_.MergeFrom(from.bonusdata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_playerdata()->::PlayerData::MergeFrom(from.playerdata());
    }
    if (cached_has_bits & 0x00000002u) {
      errcode_ = from.errcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetPlayerDataRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetPlayerDataRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerDataRes::CopyFrom(const GetPlayerDataRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetPlayerDataRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerDataRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->bonusdata())) return false;
  if (has_playerdata()) {
    if (!this->playerdata_->IsInitialized()) return false;
  }
  return true;
}

void GetPlayerDataRes::Swap(GetPlayerDataRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerDataRes::InternalSwap(GetPlayerDataRes* other) {
  using std::swap;
  bonusdata_.InternalSwap(&other->bonusdata_);
  swap(playerdata_, other->playerdata_);
  swap(errcode_, other->errcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerDataRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetLoginBonusReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLoginBonusReq::kSigntypeFieldNumber;
const int GetLoginBonusReq::kDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLoginBonusReq::GetLoginBonusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGetLoginBonusReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetLoginBonusReq)
}
GetLoginBonusReq::GetLoginBonusReq(const GetLoginBonusReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&signtype_, &from.signtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&day_) -
    reinterpret_cast<char*>(&signtype_)) + sizeof(day_));
  // @@protoc_insertion_point(copy_constructor:GetLoginBonusReq)
}

void GetLoginBonusReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&signtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&day_) -
      reinterpret_cast<char*>(&signtype_)) + sizeof(day_));
}

GetLoginBonusReq::~GetLoginBonusReq() {
  // @@protoc_insertion_point(destructor:GetLoginBonusReq)
  SharedDtor();
}

void GetLoginBonusReq::SharedDtor() {
}

void GetLoginBonusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLoginBonusReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLoginBonusReq& GetLoginBonusReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGetLoginBonusReq();
  return *internal_default_instance();
}

GetLoginBonusReq* GetLoginBonusReq::New(::google::protobuf::Arena* arena) const {
  GetLoginBonusReq* n = new GetLoginBonusReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLoginBonusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GetLoginBonusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&signtype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&day_) -
        reinterpret_cast<char*>(&signtype_)) + sizeof(day_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLoginBonusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetLoginBonusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 signtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_signtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &signtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 day = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetLoginBonusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetLoginBonusReq)
  return false;
#undef DO_
}

void GetLoginBonusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetLoginBonusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 signtype = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->signtype(), output);
  }

  // required int32 day = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->day(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetLoginBonusReq)
}

::google::protobuf::uint8* GetLoginBonusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetLoginBonusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 signtype = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->signtype(), target);
  }

  // required int32 day = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->day(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetLoginBonusReq)
  return target;
}

size_t GetLoginBonusReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GetLoginBonusReq)
  size_t total_size = 0;

  if (has_signtype()) {
    // required int32 signtype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->signtype());
  }

  if (has_day()) {
    // required int32 day = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->day());
  }

  return total_size;
}
size_t GetLoginBonusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetLoginBonusReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 signtype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->signtype());

    // required int32 day = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->day());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLoginBonusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetLoginBonusReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLoginBonusReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLoginBonusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetLoginBonusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetLoginBonusReq)
    MergeFrom(*source);
  }
}

void GetLoginBonusReq::MergeFrom(const GetLoginBonusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetLoginBonusReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      signtype_ = from.signtype_;
    }
    if (cached_has_bits & 0x00000002u) {
      day_ = from.day_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetLoginBonusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetLoginBonusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLoginBonusReq::CopyFrom(const GetLoginBonusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetLoginBonusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLoginBonusReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GetLoginBonusReq::Swap(GetLoginBonusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLoginBonusReq::InternalSwap(GetLoginBonusReq* other) {
  using std::swap;
  swap(signtype_, other->signtype_);
  swap(day_, other->day_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLoginBonusReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetLoginBonusRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLoginBonusRes::kErrcodeFieldNumber;
const int GetLoginBonusRes::kIdFieldNumber;
const int GetLoginBonusRes::kNumFieldNumber;
const int GetLoginBonusRes::kBonusdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLoginBonusRes::GetLoginBonusRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGetLoginBonusRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetLoginBonusRes)
}
GetLoginBonusRes::GetLoginBonusRes(const GetLoginBonusRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      bonusdata_(from.bonusdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&errcode_, &from.errcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&errcode_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:GetLoginBonusRes)
}

void GetLoginBonusRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&errcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&errcode_)) + sizeof(num_));
}

GetLoginBonusRes::~GetLoginBonusRes() {
  // @@protoc_insertion_point(destructor:GetLoginBonusRes)
  SharedDtor();
}

void GetLoginBonusRes::SharedDtor() {
}

void GetLoginBonusRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLoginBonusRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLoginBonusRes& GetLoginBonusRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGetLoginBonusRes();
  return *internal_default_instance();
}

GetLoginBonusRes* GetLoginBonusRes::New(::google::protobuf::Arena* arena) const {
  GetLoginBonusRes* n = new GetLoginBonusRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLoginBonusRes::Clear() {
// @@protoc_insertion_point(message_clear_start:GetLoginBonusRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bonusdata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&errcode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_) -
        reinterpret_cast<char*>(&errcode_)) + sizeof(num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLoginBonusRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetLoginBonusRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .LoginBonusData bonusdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_bonusdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetLoginBonusRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetLoginBonusRes)
  return false;
#undef DO_
}

void GetLoginBonusRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetLoginBonusRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errcode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errcode(), output);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional int32 num = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num(), output);
  }

  // repeated .LoginBonusData bonusdata = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bonusdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bonusdata(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetLoginBonusRes)
}

::google::protobuf::uint8* GetLoginBonusRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetLoginBonusRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errcode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errcode(), target);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional int32 num = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num(), target);
  }

  // repeated .LoginBonusData bonusdata = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bonusdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->bonusdata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetLoginBonusRes)
  return target;
}

size_t GetLoginBonusRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetLoginBonusRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 errcode = 1;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errcode());
  }
  // repeated .LoginBonusData bonusdata = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->bonusdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bonusdata(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLoginBonusRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetLoginBonusRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLoginBonusRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLoginBonusRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetLoginBonusRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetLoginBonusRes)
    MergeFrom(*source);
  }
}

void GetLoginBonusRes::MergeFrom(const GetLoginBonusRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetLoginBonusRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bonusdata_.MergeFrom(from.bonusdata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      errcode_ = from.errcode_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetLoginBonusRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetLoginBonusRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLoginBonusRes::CopyFrom(const GetLoginBonusRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetLoginBonusRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLoginBonusRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->bonusdata())) return false;
  return true;
}

void GetLoginBonusRes::Swap(GetLoginBonusRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLoginBonusRes::InternalSwap(GetLoginBonusRes* other) {
  using std::swap;
  bonusdata_.InternalSwap(&other->bonusdata_);
  swap(errcode_, other->errcode_);
  swap(id_, other->id_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLoginBonusRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
