// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[21];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLoginReqImpl();
void InitDefaultsLoginReq();
void InitDefaultsGuestLoginImpl();
void InitDefaultsGuestLogin();
void InitDefaultsGuestLoginInfoImpl();
void InitDefaultsGuestLoginInfo();
void InitDefaultsGuestLoginResImpl();
void InitDefaultsGuestLoginRes();
void InitDefaultsResposeImpl();
void InitDefaultsRespose();
void InitDefaultsSendMsgImpl();
void InitDefaultsSendMsg();
void InitDefaultsSendEmojiImpl();
void InitDefaultsSendEmoji();
void InitDefaultsRecvMsgImpl();
void InitDefaultsRecvMsg();
void InitDefaultsModifyNameImpl();
void InitDefaultsModifyName();
void InitDefaultsModifyPlayerIconImpl();
void InitDefaultsModifyPlayerIcon();
void InitDefaultsRecvEmojiImpl();
void InitDefaultsRecvEmoji();
void InitDefaultsAccountUpgradeReqImpl();
void InitDefaultsAccountUpgradeReq();
void InitDefaultsAccountUpgradeResImpl();
void InitDefaultsAccountUpgradeRes();
void InitDefaultsUserLoginReqImpl();
void InitDefaultsUserLoginReq();
void InitDefaultsUserLoginResImpl();
void InitDefaultsUserLoginRes();
void InitDefaultsUserLoginOutResImpl();
void InitDefaultsUserLoginOutRes();
void InitDefaultsPlayerDataImpl();
void InitDefaultsPlayerData();
void InitDefaultsLoginBonusDataImpl();
void InitDefaultsLoginBonusData();
void InitDefaultsGetPlayerDataResImpl();
void InitDefaultsGetPlayerDataRes();
void InitDefaultsGetLoginBonusReqImpl();
void InitDefaultsGetLoginBonusReq();
void InitDefaultsGetLoginBonusResImpl();
void InitDefaultsGetLoginBonusRes();
inline void InitDefaults() {
  InitDefaultsLoginReq();
  InitDefaultsGuestLogin();
  InitDefaultsGuestLoginInfo();
  InitDefaultsGuestLoginRes();
  InitDefaultsRespose();
  InitDefaultsSendMsg();
  InitDefaultsSendEmoji();
  InitDefaultsRecvMsg();
  InitDefaultsModifyName();
  InitDefaultsModifyPlayerIcon();
  InitDefaultsRecvEmoji();
  InitDefaultsAccountUpgradeReq();
  InitDefaultsAccountUpgradeRes();
  InitDefaultsUserLoginReq();
  InitDefaultsUserLoginRes();
  InitDefaultsUserLoginOutRes();
  InitDefaultsPlayerData();
  InitDefaultsLoginBonusData();
  InitDefaultsGetPlayerDataRes();
  InitDefaultsGetLoginBonusReq();
  InitDefaultsGetLoginBonusRes();
}
}  // namespace protobuf_game_2eproto
class AccountUpgradeReq;
class AccountUpgradeReqDefaultTypeInternal;
extern AccountUpgradeReqDefaultTypeInternal _AccountUpgradeReq_default_instance_;
class AccountUpgradeRes;
class AccountUpgradeResDefaultTypeInternal;
extern AccountUpgradeResDefaultTypeInternal _AccountUpgradeRes_default_instance_;
class GetLoginBonusReq;
class GetLoginBonusReqDefaultTypeInternal;
extern GetLoginBonusReqDefaultTypeInternal _GetLoginBonusReq_default_instance_;
class GetLoginBonusRes;
class GetLoginBonusResDefaultTypeInternal;
extern GetLoginBonusResDefaultTypeInternal _GetLoginBonusRes_default_instance_;
class GetPlayerDataRes;
class GetPlayerDataResDefaultTypeInternal;
extern GetPlayerDataResDefaultTypeInternal _GetPlayerDataRes_default_instance_;
class GuestLogin;
class GuestLoginDefaultTypeInternal;
extern GuestLoginDefaultTypeInternal _GuestLogin_default_instance_;
class GuestLoginInfo;
class GuestLoginInfoDefaultTypeInternal;
extern GuestLoginInfoDefaultTypeInternal _GuestLoginInfo_default_instance_;
class GuestLoginRes;
class GuestLoginResDefaultTypeInternal;
extern GuestLoginResDefaultTypeInternal _GuestLoginRes_default_instance_;
class LoginBonusData;
class LoginBonusDataDefaultTypeInternal;
extern LoginBonusDataDefaultTypeInternal _LoginBonusData_default_instance_;
class LoginReq;
class LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class ModifyName;
class ModifyNameDefaultTypeInternal;
extern ModifyNameDefaultTypeInternal _ModifyName_default_instance_;
class ModifyPlayerIcon;
class ModifyPlayerIconDefaultTypeInternal;
extern ModifyPlayerIconDefaultTypeInternal _ModifyPlayerIcon_default_instance_;
class PlayerData;
class PlayerDataDefaultTypeInternal;
extern PlayerDataDefaultTypeInternal _PlayerData_default_instance_;
class RecvEmoji;
class RecvEmojiDefaultTypeInternal;
extern RecvEmojiDefaultTypeInternal _RecvEmoji_default_instance_;
class RecvMsg;
class RecvMsgDefaultTypeInternal;
extern RecvMsgDefaultTypeInternal _RecvMsg_default_instance_;
class Respose;
class ResposeDefaultTypeInternal;
extern ResposeDefaultTypeInternal _Respose_default_instance_;
class SendEmoji;
class SendEmojiDefaultTypeInternal;
extern SendEmojiDefaultTypeInternal _SendEmoji_default_instance_;
class SendMsg;
class SendMsgDefaultTypeInternal;
extern SendMsgDefaultTypeInternal _SendMsg_default_instance_;
class UserLoginOutRes;
class UserLoginOutResDefaultTypeInternal;
extern UserLoginOutResDefaultTypeInternal _UserLoginOutRes_default_instance_;
class UserLoginReq;
class UserLoginReqDefaultTypeInternal;
extern UserLoginReqDefaultTypeInternal _UserLoginReq_default_instance_;
class UserLoginRes;
class UserLoginResDefaultTypeInternal;
extern UserLoginResDefaultTypeInternal _UserLoginRes_default_instance_;

enum Stype {
  INVALID_STYPE = 0,
  Auth = 1,
  TalkRoom = 2,
  System = 3,
  Logic = 4
};
bool Stype_IsValid(int value);
const Stype Stype_MIN = INVALID_STYPE;
const Stype Stype_MAX = Logic;
const int Stype_ARRAYSIZE = Stype_MAX + 1;

const ::google::protobuf::EnumDescriptor* Stype_descriptor();
inline const ::std::string& Stype_Name(Stype value) {
  return ::google::protobuf::internal::NameOfEnum(
    Stype_descriptor(), value);
}
inline bool Stype_Parse(
    const ::std::string& name, Stype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Stype>(
    Stype_descriptor(), name, value);
}
enum Cmd {
  INVALID_CMD = 0,
  eLoginReq = 1,
  eRespose = 2,
  eSendMsg = 3,
  eSendEmoji = 4,
  eRecvMsg = 5,
  eRecvEmoji = 6,
  eExitDisconnect = 7,
  eGuestLogin = 8,
  eGuestLoginRes = 9,
  eDropByOther = 10,
  eModifyName = 11,
  eModifyPlayerIcon = 12,
  eAccountUpgradeReq = 13,
  eAccountUpgradeRes = 14,
  eUserLoginReq = 15,
  eUserLoginRes = 16,
  eUserLoginOutReq = 17,
  eUserLoginOutRes = 18,
  eGetPlayerDataReq = 19,
  eGetPlayerDataRes = 20,
  eGetLoginBonusReq = 21,
  eGetLoginBonusRes = 22
};
bool Cmd_IsValid(int value);
const Cmd Cmd_MIN = INVALID_CMD;
const Cmd Cmd_MAX = eGetLoginBonusRes;
const int Cmd_ARRAYSIZE = Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* Cmd_descriptor();
inline const ::std::string& Cmd_Name(Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    Cmd_descriptor(), value);
}
inline bool Cmd_Parse(
    const ::std::string& name, Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cmd>(
    Cmd_descriptor(), name, value);
}
// ===================================================================

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginReq(LoginReq&& from) noexcept
    : LoginReq() {
    *this = ::std::move(from);
  }

  inline LoginReq& operator=(LoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LoginReq* other);
  friend void swap(LoginReq& a, LoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string email = 3;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 3;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required int32 age = 2;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // required int32 int_set = 4;
  bool has_int_set() const;
  void clear_int_set();
  static const int kIntSetFieldNumber = 4;
  ::google::protobuf::int32 int_set() const;
  void set_int_set(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginReq)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_age();
  void clear_has_age();
  void set_has_email();
  void clear_has_email();
  void set_has_int_set();
  void clear_has_int_set();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 int_set_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsLoginReqImpl();
};
// -------------------------------------------------------------------

class GuestLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLogin) */ {
 public:
  GuestLogin();
  virtual ~GuestLogin();

  GuestLogin(const GuestLogin& from);

  inline GuestLogin& operator=(const GuestLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLogin(GuestLogin&& from) noexcept
    : GuestLogin() {
    *this = ::std::move(from);
  }

  inline GuestLogin& operator=(GuestLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLogin* internal_default_instance() {
    return reinterpret_cast<const GuestLogin*>(
               &_GuestLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GuestLogin* other);
  friend void swap(GuestLogin& a, GuestLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestLogin& from);
  void MergeFrom(const GuestLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string u_key = 1;
  bool has_u_key() const;
  void clear_u_key();
  static const int kUKeyFieldNumber = 1;
  const ::std::string& u_key() const;
  void set_u_key(const ::std::string& value);
  #if LANG_CXX11
  void set_u_key(::std::string&& value);
  #endif
  void set_u_key(const char* value);
  void set_u_key(const char* value, size_t size);
  ::std::string* mutable_u_key();
  ::std::string* release_u_key();
  void set_allocated_u_key(::std::string* u_key);

  // @@protoc_insertion_point(class_scope:GuestLogin)
 private:
  void set_has_u_key();
  void clear_has_u_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr u_key_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGuestLoginImpl();
};
// -------------------------------------------------------------------

class GuestLoginInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLoginInfo) */ {
 public:
  GuestLoginInfo();
  virtual ~GuestLoginInfo();

  GuestLoginInfo(const GuestLoginInfo& from);

  inline GuestLoginInfo& operator=(const GuestLoginInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLoginInfo(GuestLoginInfo&& from) noexcept
    : GuestLoginInfo() {
    *this = ::std::move(from);
  }

  inline GuestLoginInfo& operator=(GuestLoginInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestLoginInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLoginInfo* internal_default_instance() {
    return reinterpret_cast<const GuestLoginInfo*>(
               &_GuestLoginInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GuestLoginInfo* other);
  friend void swap(GuestLoginInfo& a, GuestLoginInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLoginInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestLoginInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestLoginInfo& from);
  void MergeFrom(const GuestLoginInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestLoginInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // required int32 sex = 3;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // required int32 face = 4;
  bool has_face() const;
  void clear_face();
  static const int kFaceFieldNumber = 4;
  ::google::protobuf::int32 face() const;
  void set_face(::google::protobuf::int32 value);

  // required int32 is_guest = 5;
  bool has_is_guest() const;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 5;
  ::google::protobuf::int32 is_guest() const;
  void set_is_guest(::google::protobuf::int32 value);

  // required int32 status = 6;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuestLoginInfo)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_name();
  void clear_has_name();
  void set_has_sex();
  void clear_has_sex();
  void set_has_face();
  void clear_has_face();
  void set_has_is_guest();
  void clear_has_is_guest();
  void set_has_status();
  void clear_has_status();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 face_;
  ::google::protobuf::int32 is_guest_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGuestLoginInfoImpl();
};
// -------------------------------------------------------------------

class GuestLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLoginRes) */ {
 public:
  GuestLoginRes();
  virtual ~GuestLoginRes();

  GuestLoginRes(const GuestLoginRes& from);

  inline GuestLoginRes& operator=(const GuestLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLoginRes(GuestLoginRes&& from) noexcept
    : GuestLoginRes() {
    *this = ::std::move(from);
  }

  inline GuestLoginRes& operator=(GuestLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLoginRes* internal_default_instance() {
    return reinterpret_cast<const GuestLoginRes*>(
               &_GuestLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GuestLoginRes* other);
  friend void swap(GuestLoginRes& a, GuestLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestLoginRes& from);
  void MergeFrom(const GuestLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GuestLoginInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::GuestLoginInfo& info() const;
  ::GuestLoginInfo* release_info();
  ::GuestLoginInfo* mutable_info();
  void set_allocated_info(::GuestLoginInfo* info);

  // required int32 errcode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuestLoginRes)
 private:
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GuestLoginInfo* info_;
  ::google::protobuf::int32 errcode_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGuestLoginResImpl();
};
// -------------------------------------------------------------------

class Respose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Respose) */ {
 public:
  Respose();
  virtual ~Respose();

  Respose(const Respose& from);

  inline Respose& operator=(const Respose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Respose(Respose&& from) noexcept
    : Respose() {
    *this = ::std::move(from);
  }

  inline Respose& operator=(Respose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Respose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Respose* internal_default_instance() {
    return reinterpret_cast<const Respose*>(
               &_Respose_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Respose* other);
  friend void swap(Respose& a, Respose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Respose* New() const PROTOBUF_FINAL { return New(NULL); }

  Respose* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Respose& from);
  void MergeFrom(const Respose& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Respose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Respose)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsResposeImpl();
};
// -------------------------------------------------------------------

class SendMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendMsg) */ {
 public:
  SendMsg();
  virtual ~SendMsg();

  SendMsg(const SendMsg& from);

  inline SendMsg& operator=(const SendMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendMsg(SendMsg&& from) noexcept
    : SendMsg() {
    *this = ::std::move(from);
  }

  inline SendMsg& operator=(SendMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendMsg* internal_default_instance() {
    return reinterpret_cast<const SendMsg*>(
               &_SendMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SendMsg* other);
  friend void swap(SendMsg& a, SendMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  SendMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendMsg& from);
  void MergeFrom(const SendMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:SendMsg)
 private:
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsSendMsgImpl();
};
// -------------------------------------------------------------------

class SendEmoji : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendEmoji) */ {
 public:
  SendEmoji();
  virtual ~SendEmoji();

  SendEmoji(const SendEmoji& from);

  inline SendEmoji& operator=(const SendEmoji& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendEmoji(SendEmoji&& from) noexcept
    : SendEmoji() {
    *this = ::std::move(from);
  }

  inline SendEmoji& operator=(SendEmoji&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendEmoji& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendEmoji* internal_default_instance() {
    return reinterpret_cast<const SendEmoji*>(
               &_SendEmoji_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SendEmoji* other);
  friend void swap(SendEmoji& a, SendEmoji& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendEmoji* New() const PROTOBUF_FINAL { return New(NULL); }

  SendEmoji* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendEmoji& from);
  void MergeFrom(const SendEmoji& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendEmoji* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SendEmoji)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsSendEmojiImpl();
};
// -------------------------------------------------------------------

class RecvMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RecvMsg) */ {
 public:
  RecvMsg();
  virtual ~RecvMsg();

  RecvMsg(const RecvMsg& from);

  inline RecvMsg& operator=(const RecvMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecvMsg(RecvMsg&& from) noexcept
    : RecvMsg() {
    *this = ::std::move(from);
  }

  inline RecvMsg& operator=(RecvMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecvMsg* internal_default_instance() {
    return reinterpret_cast<const RecvMsg*>(
               &_RecvMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(RecvMsg* other);
  friend void swap(RecvMsg& a, RecvMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecvMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  RecvMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecvMsg& from);
  void MergeFrom(const RecvMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecvMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:RecvMsg)
 private:
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsRecvMsgImpl();
};
// -------------------------------------------------------------------

class ModifyName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ModifyName) */ {
 public:
  ModifyName();
  virtual ~ModifyName();

  ModifyName(const ModifyName& from);

  inline ModifyName& operator=(const ModifyName& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModifyName(ModifyName&& from) noexcept
    : ModifyName() {
    *this = ::std::move(from);
  }

  inline ModifyName& operator=(ModifyName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModifyName* internal_default_instance() {
    return reinterpret_cast<const ModifyName*>(
               &_ModifyName_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ModifyName* other);
  friend void swap(ModifyName& a, ModifyName& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModifyName* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyName* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyName& from);
  void MergeFrom(const ModifyName& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ModifyName)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsModifyNameImpl();
};
// -------------------------------------------------------------------

class ModifyPlayerIcon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ModifyPlayerIcon) */ {
 public:
  ModifyPlayerIcon();
  virtual ~ModifyPlayerIcon();

  ModifyPlayerIcon(const ModifyPlayerIcon& from);

  inline ModifyPlayerIcon& operator=(const ModifyPlayerIcon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModifyPlayerIcon(ModifyPlayerIcon&& from) noexcept
    : ModifyPlayerIcon() {
    *this = ::std::move(from);
  }

  inline ModifyPlayerIcon& operator=(ModifyPlayerIcon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyPlayerIcon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModifyPlayerIcon* internal_default_instance() {
    return reinterpret_cast<const ModifyPlayerIcon*>(
               &_ModifyPlayerIcon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ModifyPlayerIcon* other);
  friend void swap(ModifyPlayerIcon& a, ModifyPlayerIcon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModifyPlayerIcon* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyPlayerIcon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyPlayerIcon& from);
  void MergeFrom(const ModifyPlayerIcon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyPlayerIcon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playericon = 1;
  bool has_playericon() const;
  void clear_playericon();
  static const int kPlayericonFieldNumber = 1;
  ::google::protobuf::int32 playericon() const;
  void set_playericon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ModifyPlayerIcon)
 private:
  void set_has_playericon();
  void clear_has_playericon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 playericon_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsModifyPlayerIconImpl();
};
// -------------------------------------------------------------------

class RecvEmoji : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RecvEmoji) */ {
 public:
  RecvEmoji();
  virtual ~RecvEmoji();

  RecvEmoji(const RecvEmoji& from);

  inline RecvEmoji& operator=(const RecvEmoji& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecvEmoji(RecvEmoji&& from) noexcept
    : RecvEmoji() {
    *this = ::std::move(from);
  }

  inline RecvEmoji& operator=(RecvEmoji&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvEmoji& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecvEmoji* internal_default_instance() {
    return reinterpret_cast<const RecvEmoji*>(
               &_RecvEmoji_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(RecvEmoji* other);
  friend void swap(RecvEmoji& a, RecvEmoji& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecvEmoji* New() const PROTOBUF_FINAL { return New(NULL); }

  RecvEmoji* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecvEmoji& from);
  void MergeFrom(const RecvEmoji& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecvEmoji* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RecvEmoji)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsRecvEmojiImpl();
};
// -------------------------------------------------------------------

class AccountUpgradeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountUpgradeReq) */ {
 public:
  AccountUpgradeReq();
  virtual ~AccountUpgradeReq();

  AccountUpgradeReq(const AccountUpgradeReq& from);

  inline AccountUpgradeReq& operator=(const AccountUpgradeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountUpgradeReq(AccountUpgradeReq&& from) noexcept
    : AccountUpgradeReq() {
    *this = ::std::move(from);
  }

  inline AccountUpgradeReq& operator=(AccountUpgradeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountUpgradeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountUpgradeReq* internal_default_instance() {
    return reinterpret_cast<const AccountUpgradeReq*>(
               &_AccountUpgradeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(AccountUpgradeReq* other);
  friend void swap(AccountUpgradeReq& a, AccountUpgradeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountUpgradeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountUpgradeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountUpgradeReq& from);
  void MergeFrom(const AccountUpgradeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountUpgradeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string phonenumber = 1;
  bool has_phonenumber() const;
  void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 1;
  const ::std::string& phonenumber() const;
  void set_phonenumber(const ::std::string& value);
  #if LANG_CXX11
  void set_phonenumber(::std::string&& value);
  #endif
  void set_phonenumber(const char* value);
  void set_phonenumber(const char* value, size_t size);
  ::std::string* mutable_phonenumber();
  ::std::string* release_phonenumber();
  void set_allocated_phonenumber(::std::string* phonenumber);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:AccountUpgradeReq)
 private:
  void set_has_phonenumber();
  void clear_has_phonenumber();
  void set_has_password();
  void clear_has_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsAccountUpgradeReqImpl();
};
// -------------------------------------------------------------------

class AccountUpgradeRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountUpgradeRes) */ {
 public:
  AccountUpgradeRes();
  virtual ~AccountUpgradeRes();

  AccountUpgradeRes(const AccountUpgradeRes& from);

  inline AccountUpgradeRes& operator=(const AccountUpgradeRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountUpgradeRes(AccountUpgradeRes&& from) noexcept
    : AccountUpgradeRes() {
    *this = ::std::move(from);
  }

  inline AccountUpgradeRes& operator=(AccountUpgradeRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountUpgradeRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountUpgradeRes* internal_default_instance() {
    return reinterpret_cast<const AccountUpgradeRes*>(
               &_AccountUpgradeRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(AccountUpgradeRes* other);
  friend void swap(AccountUpgradeRes& a, AccountUpgradeRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountUpgradeRes* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountUpgradeRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountUpgradeRes& from);
  void MergeFrom(const AccountUpgradeRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountUpgradeRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string playeraccount = 2;
  bool has_playeraccount() const;
  void clear_playeraccount();
  static const int kPlayeraccountFieldNumber = 2;
  const ::std::string& playeraccount() const;
  void set_playeraccount(const ::std::string& value);
  #if LANG_CXX11
  void set_playeraccount(::std::string&& value);
  #endif
  void set_playeraccount(const char* value);
  void set_playeraccount(const char* value, size_t size);
  ::std::string* mutable_playeraccount();
  ::std::string* release_playeraccount();
  void set_allocated_playeraccount(::std::string* playeraccount);

  // optional string password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AccountUpgradeRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_playeraccount();
  void clear_has_playeraccount();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playeraccount_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsAccountUpgradeResImpl();
};
// -------------------------------------------------------------------

class UserLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserLoginReq) */ {
 public:
  UserLoginReq();
  virtual ~UserLoginReq();

  UserLoginReq(const UserLoginReq& from);

  inline UserLoginReq& operator=(const UserLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserLoginReq(UserLoginReq&& from) noexcept
    : UserLoginReq() {
    *this = ::std::move(from);
  }

  inline UserLoginReq& operator=(UserLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserLoginReq* internal_default_instance() {
    return reinterpret_cast<const UserLoginReq*>(
               &_UserLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(UserLoginReq* other);
  friend void swap(UserLoginReq& a, UserLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UserLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserLoginReq& from);
  void MergeFrom(const UserLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string playeraccount = 1;
  bool has_playeraccount() const;
  void clear_playeraccount();
  static const int kPlayeraccountFieldNumber = 1;
  const ::std::string& playeraccount() const;
  void set_playeraccount(const ::std::string& value);
  #if LANG_CXX11
  void set_playeraccount(::std::string&& value);
  #endif
  void set_playeraccount(const char* value);
  void set_playeraccount(const char* value, size_t size);
  ::std::string* mutable_playeraccount();
  ::std::string* release_playeraccount();
  void set_allocated_playeraccount(::std::string* playeraccount);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:UserLoginReq)
 private:
  void set_has_playeraccount();
  void clear_has_playeraccount();
  void set_has_password();
  void clear_has_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playeraccount_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserLoginReqImpl();
};
// -------------------------------------------------------------------

class UserLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserLoginRes) */ {
 public:
  UserLoginRes();
  virtual ~UserLoginRes();

  UserLoginRes(const UserLoginRes& from);

  inline UserLoginRes& operator=(const UserLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserLoginRes(UserLoginRes&& from) noexcept
    : UserLoginRes() {
    *this = ::std::move(from);
  }

  inline UserLoginRes& operator=(UserLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserLoginRes* internal_default_instance() {
    return reinterpret_cast<const UserLoginRes*>(
               &_UserLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(UserLoginRes* other);
  friend void swap(UserLoginRes& a, UserLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  UserLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserLoginRes& from);
  void MergeFrom(const UserLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GuestLoginInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::GuestLoginInfo& info() const;
  ::GuestLoginInfo* release_info();
  ::GuestLoginInfo* mutable_info();
  void set_allocated_info(::GuestLoginInfo* info);

  // required int32 errcode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserLoginRes)
 private:
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GuestLoginInfo* info_;
  ::google::protobuf::int32 errcode_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserLoginResImpl();
};
// -------------------------------------------------------------------

class UserLoginOutRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserLoginOutRes) */ {
 public:
  UserLoginOutRes();
  virtual ~UserLoginOutRes();

  UserLoginOutRes(const UserLoginOutRes& from);

  inline UserLoginOutRes& operator=(const UserLoginOutRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserLoginOutRes(UserLoginOutRes&& from) noexcept
    : UserLoginOutRes() {
    *this = ::std::move(from);
  }

  inline UserLoginOutRes& operator=(UserLoginOutRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginOutRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserLoginOutRes* internal_default_instance() {
    return reinterpret_cast<const UserLoginOutRes*>(
               &_UserLoginOutRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(UserLoginOutRes* other);
  friend void swap(UserLoginOutRes& a, UserLoginOutRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserLoginOutRes* New() const PROTOBUF_FINAL { return New(NULL); }

  UserLoginOutRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserLoginOutRes& from);
  void MergeFrom(const UserLoginOutRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserLoginOutRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserLoginOutRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserLoginOutResImpl();
};
// -------------------------------------------------------------------

class PlayerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerData) */ {
 public:
  PlayerData();
  virtual ~PlayerData();

  PlayerData(const PlayerData& from);

  inline PlayerData& operator=(const PlayerData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerData(PlayerData&& from) noexcept
    : PlayerData() {
    *this = ::std::move(from);
  }

  inline PlayerData& operator=(PlayerData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerData* internal_default_instance() {
    return reinterpret_cast<const PlayerData*>(
               &_PlayerData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(PlayerData* other);
  friend void swap(PlayerData& a, PlayerData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerData* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerData& from);
  void MergeFrom(const PlayerData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 money = 1;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 1;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // required int32 grade = 2;
  bool has_grade() const;
  void clear_grade();
  static const int kGradeFieldNumber = 2;
  ::google::protobuf::int32 grade() const;
  void set_grade(::google::protobuf::int32 value);

  // required int32 exp = 3;
  bool has_exp() const;
  void clear_exp();
  static const int kExpFieldNumber = 3;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // required int32 vip = 4;
  bool has_vip() const;
  void clear_vip();
  static const int kVipFieldNumber = 4;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerData)
 private:
  void set_has_money();
  void clear_has_money();
  void set_has_grade();
  void clear_has_grade();
  void set_has_exp();
  void clear_has_exp();
  void set_has_vip();
  void clear_has_vip();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 vip_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsPlayerDataImpl();
};
// -------------------------------------------------------------------

class LoginBonusData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginBonusData) */ {
 public:
  LoginBonusData();
  virtual ~LoginBonusData();

  LoginBonusData(const LoginBonusData& from);

  inline LoginBonusData& operator=(const LoginBonusData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginBonusData(LoginBonusData&& from) noexcept
    : LoginBonusData() {
    *this = ::std::move(from);
  }

  inline LoginBonusData& operator=(LoginBonusData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginBonusData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginBonusData* internal_default_instance() {
    return reinterpret_cast<const LoginBonusData*>(
               &_LoginBonusData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(LoginBonusData* other);
  friend void swap(LoginBonusData& a, LoginBonusData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginBonusData* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginBonusData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginBonusData& from);
  void MergeFrom(const LoginBonusData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginBonusData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 num = 2;
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // required int32 status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // required int32 day = 4;
  bool has_day() const;
  void clear_day();
  static const int kDayFieldNumber = 4;
  ::google::protobuf::int32 day() const;
  void set_day(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginBonusData)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_num();
  void clear_has_num();
  void set_has_status();
  void clear_has_status();
  void set_has_day();
  void clear_has_day();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 day_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsLoginBonusDataImpl();
};
// -------------------------------------------------------------------

class GetPlayerDataRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetPlayerDataRes) */ {
 public:
  GetPlayerDataRes();
  virtual ~GetPlayerDataRes();

  GetPlayerDataRes(const GetPlayerDataRes& from);

  inline GetPlayerDataRes& operator=(const GetPlayerDataRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerDataRes(GetPlayerDataRes&& from) noexcept
    : GetPlayerDataRes() {
    *this = ::std::move(from);
  }

  inline GetPlayerDataRes& operator=(GetPlayerDataRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerDataRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPlayerDataRes* internal_default_instance() {
    return reinterpret_cast<const GetPlayerDataRes*>(
               &_GetPlayerDataRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GetPlayerDataRes* other);
  friend void swap(GetPlayerDataRes& a, GetPlayerDataRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerDataRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerDataRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerDataRes& from);
  void MergeFrom(const GetPlayerDataRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerDataRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .LoginBonusData bonusdata = 3;
  int bonusdata_size() const;
  void clear_bonusdata();
  static const int kBonusdataFieldNumber = 3;
  const ::LoginBonusData& bonusdata(int index) const;
  ::LoginBonusData* mutable_bonusdata(int index);
  ::LoginBonusData* add_bonusdata();
  ::google::protobuf::RepeatedPtrField< ::LoginBonusData >*
      mutable_bonusdata();
  const ::google::protobuf::RepeatedPtrField< ::LoginBonusData >&
      bonusdata() const;

  // optional .PlayerData playerdata = 2;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 2;
  const ::PlayerData& playerdata() const;
  ::PlayerData* release_playerdata();
  ::PlayerData* mutable_playerdata();
  void set_allocated_playerdata(::PlayerData* playerdata);

  // required int32 errcode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetPlayerDataRes)
 private:
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_playerdata();
  void clear_has_playerdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::LoginBonusData > bonusdata_;
  ::PlayerData* playerdata_;
  ::google::protobuf::int32 errcode_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetPlayerDataResImpl();
};
// -------------------------------------------------------------------

class GetLoginBonusReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetLoginBonusReq) */ {
 public:
  GetLoginBonusReq();
  virtual ~GetLoginBonusReq();

  GetLoginBonusReq(const GetLoginBonusReq& from);

  inline GetLoginBonusReq& operator=(const GetLoginBonusReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetLoginBonusReq(GetLoginBonusReq&& from) noexcept
    : GetLoginBonusReq() {
    *this = ::std::move(from);
  }

  inline GetLoginBonusReq& operator=(GetLoginBonusReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLoginBonusReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetLoginBonusReq* internal_default_instance() {
    return reinterpret_cast<const GetLoginBonusReq*>(
               &_GetLoginBonusReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GetLoginBonusReq* other);
  friend void swap(GetLoginBonusReq& a, GetLoginBonusReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetLoginBonusReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLoginBonusReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLoginBonusReq& from);
  void MergeFrom(const GetLoginBonusReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLoginBonusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 signtype = 1;
  bool has_signtype() const;
  void clear_signtype();
  static const int kSigntypeFieldNumber = 1;
  ::google::protobuf::int32 signtype() const;
  void set_signtype(::google::protobuf::int32 value);

  // required int32 day = 2;
  bool has_day() const;
  void clear_day();
  static const int kDayFieldNumber = 2;
  ::google::protobuf::int32 day() const;
  void set_day(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetLoginBonusReq)
 private:
  void set_has_signtype();
  void clear_has_signtype();
  void set_has_day();
  void clear_has_day();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 signtype_;
  ::google::protobuf::int32 day_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetLoginBonusReqImpl();
};
// -------------------------------------------------------------------

class GetLoginBonusRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetLoginBonusRes) */ {
 public:
  GetLoginBonusRes();
  virtual ~GetLoginBonusRes();

  GetLoginBonusRes(const GetLoginBonusRes& from);

  inline GetLoginBonusRes& operator=(const GetLoginBonusRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetLoginBonusRes(GetLoginBonusRes&& from) noexcept
    : GetLoginBonusRes() {
    *this = ::std::move(from);
  }

  inline GetLoginBonusRes& operator=(GetLoginBonusRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLoginBonusRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetLoginBonusRes* internal_default_instance() {
    return reinterpret_cast<const GetLoginBonusRes*>(
               &_GetLoginBonusRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(GetLoginBonusRes* other);
  friend void swap(GetLoginBonusRes& a, GetLoginBonusRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetLoginBonusRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLoginBonusRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLoginBonusRes& from);
  void MergeFrom(const GetLoginBonusRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLoginBonusRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .LoginBonusData bonusdata = 4;
  int bonusdata_size() const;
  void clear_bonusdata();
  static const int kBonusdataFieldNumber = 4;
  const ::LoginBonusData& bonusdata(int index) const;
  ::LoginBonusData* mutable_bonusdata(int index);
  ::LoginBonusData* add_bonusdata();
  ::google::protobuf::RepeatedPtrField< ::LoginBonusData >*
      mutable_bonusdata();
  const ::google::protobuf::RepeatedPtrField< ::LoginBonusData >&
      bonusdata() const;

  // required int32 errcode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // optional int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 num = 3;
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetLoginBonusRes)
 private:
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_id();
  void clear_has_id();
  void set_has_num();
  void clear_has_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::LoginBonusData > bonusdata_;
  ::google::protobuf::int32 errcode_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetLoginBonusResImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginReq

// required string name = 1;
inline bool LoginReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LoginReq::name() const {
  // @@protoc_insertion_point(field_get:LoginReq.name)
  return name_.GetNoArena();
}
inline void LoginReq::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginReq.name)
}
#if LANG_CXX11
inline void LoginReq::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginReq.name)
}
#endif
inline void LoginReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginReq.name)
}
inline void LoginReq::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginReq.name)
}
inline ::std::string* LoginReq::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:LoginReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_name() {
  // @@protoc_insertion_point(field_release:LoginReq.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:LoginReq.name)
}

// required int32 age = 2;
inline bool LoginReq::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginReq::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginReq::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginReq::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 LoginReq::age() const {
  // @@protoc_insertion_point(field_get:LoginReq.age)
  return age_;
}
inline void LoginReq::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:LoginReq.age)
}

// required string email = 3;
inline bool LoginReq::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReq::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReq::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReq::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& LoginReq::email() const {
  // @@protoc_insertion_point(field_get:LoginReq.email)
  return email_.GetNoArena();
}
inline void LoginReq::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginReq.email)
}
#if LANG_CXX11
inline void LoginReq::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginReq.email)
}
#endif
inline void LoginReq::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginReq.email)
}
inline void LoginReq::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginReq.email)
}
inline ::std::string* LoginReq::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:LoginReq.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_email() {
  // @@protoc_insertion_point(field_release:LoginReq.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:LoginReq.email)
}

// required int32 int_set = 4;
inline bool LoginReq::has_int_set() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginReq::set_has_int_set() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginReq::clear_has_int_set() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginReq::clear_int_set() {
  int_set_ = 0;
  clear_has_int_set();
}
inline ::google::protobuf::int32 LoginReq::int_set() const {
  // @@protoc_insertion_point(field_get:LoginReq.int_set)
  return int_set_;
}
inline void LoginReq::set_int_set(::google::protobuf::int32 value) {
  set_has_int_set();
  int_set_ = value;
  // @@protoc_insertion_point(field_set:LoginReq.int_set)
}

// -------------------------------------------------------------------

// GuestLogin

// required string u_key = 1;
inline bool GuestLogin::has_u_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuestLogin::set_has_u_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuestLogin::clear_has_u_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuestLogin::clear_u_key() {
  u_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_u_key();
}
inline const ::std::string& GuestLogin::u_key() const {
  // @@protoc_insertion_point(field_get:GuestLogin.u_key)
  return u_key_.GetNoArena();
}
inline void GuestLogin::set_u_key(const ::std::string& value) {
  set_has_u_key();
  u_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestLogin.u_key)
}
#if LANG_CXX11
inline void GuestLogin::set_u_key(::std::string&& value) {
  set_has_u_key();
  u_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestLogin.u_key)
}
#endif
inline void GuestLogin::set_u_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_u_key();
  u_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestLogin.u_key)
}
inline void GuestLogin::set_u_key(const char* value, size_t size) {
  set_has_u_key();
  u_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestLogin.u_key)
}
inline ::std::string* GuestLogin::mutable_u_key() {
  set_has_u_key();
  // @@protoc_insertion_point(field_mutable:GuestLogin.u_key)
  return u_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestLogin::release_u_key() {
  // @@protoc_insertion_point(field_release:GuestLogin.u_key)
  clear_has_u_key();
  return u_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestLogin::set_allocated_u_key(::std::string* u_key) {
  if (u_key != NULL) {
    set_has_u_key();
  } else {
    clear_has_u_key();
  }
  u_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), u_key);
  // @@protoc_insertion_point(field_set_allocated:GuestLogin.u_key)
}

// -------------------------------------------------------------------

// GuestLoginInfo

// required int32 uid = 1;
inline bool GuestLoginInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuestLoginInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuestLoginInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuestLoginInfo::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 GuestLoginInfo::uid() const {
  // @@protoc_insertion_point(field_get:GuestLoginInfo.uid)
  return uid_;
}
inline void GuestLoginInfo::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:GuestLoginInfo.uid)
}

// required string name = 2;
inline bool GuestLoginInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuestLoginInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuestLoginInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuestLoginInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& GuestLoginInfo::name() const {
  // @@protoc_insertion_point(field_get:GuestLoginInfo.name)
  return name_.GetNoArena();
}
inline void GuestLoginInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestLoginInfo.name)
}
#if LANG_CXX11
inline void GuestLoginInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestLoginInfo.name)
}
#endif
inline void GuestLoginInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestLoginInfo.name)
}
inline void GuestLoginInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestLoginInfo.name)
}
inline ::std::string* GuestLoginInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:GuestLoginInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestLoginInfo::release_name() {
  // @@protoc_insertion_point(field_release:GuestLoginInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestLoginInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:GuestLoginInfo.name)
}

// required int32 sex = 3;
inline bool GuestLoginInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuestLoginInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuestLoginInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuestLoginInfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 GuestLoginInfo::sex() const {
  // @@protoc_insertion_point(field_get:GuestLoginInfo.sex)
  return sex_;
}
inline void GuestLoginInfo::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:GuestLoginInfo.sex)
}

// required int32 face = 4;
inline bool GuestLoginInfo::has_face() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuestLoginInfo::set_has_face() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuestLoginInfo::clear_has_face() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuestLoginInfo::clear_face() {
  face_ = 0;
  clear_has_face();
}
inline ::google::protobuf::int32 GuestLoginInfo::face() const {
  // @@protoc_insertion_point(field_get:GuestLoginInfo.face)
  return face_;
}
inline void GuestLoginInfo::set_face(::google::protobuf::int32 value) {
  set_has_face();
  face_ = value;
  // @@protoc_insertion_point(field_set:GuestLoginInfo.face)
}

// required int32 is_guest = 5;
inline bool GuestLoginInfo::has_is_guest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuestLoginInfo::set_has_is_guest() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuestLoginInfo::clear_has_is_guest() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuestLoginInfo::clear_is_guest() {
  is_guest_ = 0;
  clear_has_is_guest();
}
inline ::google::protobuf::int32 GuestLoginInfo::is_guest() const {
  // @@protoc_insertion_point(field_get:GuestLoginInfo.is_guest)
  return is_guest_;
}
inline void GuestLoginInfo::set_is_guest(::google::protobuf::int32 value) {
  set_has_is_guest();
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:GuestLoginInfo.is_guest)
}

// required int32 status = 6;
inline bool GuestLoginInfo::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuestLoginInfo::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuestLoginInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuestLoginInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GuestLoginInfo::status() const {
  // @@protoc_insertion_point(field_get:GuestLoginInfo.status)
  return status_;
}
inline void GuestLoginInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GuestLoginInfo.status)
}

// -------------------------------------------------------------------

// GuestLoginRes

// required int32 errcode = 1;
inline bool GuestLoginRes::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuestLoginRes::set_has_errcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuestLoginRes::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuestLoginRes::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 GuestLoginRes::errcode() const {
  // @@protoc_insertion_point(field_get:GuestLoginRes.errcode)
  return errcode_;
}
inline void GuestLoginRes::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:GuestLoginRes.errcode)
}

// optional .GuestLoginInfo info = 2;
inline bool GuestLoginRes::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuestLoginRes::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuestLoginRes::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuestLoginRes::clear_info() {
  if (info_ != NULL) info_->Clear();
  clear_has_info();
}
inline const ::GuestLoginInfo& GuestLoginRes::info() const {
  const ::GuestLoginInfo* p = info_;
  // @@protoc_insertion_point(field_get:GuestLoginRes.info)
  return p != NULL ? *p : *reinterpret_cast<const ::GuestLoginInfo*>(
      &::_GuestLoginInfo_default_instance_);
}
inline ::GuestLoginInfo* GuestLoginRes::release_info() {
  // @@protoc_insertion_point(field_release:GuestLoginRes.info)
  clear_has_info();
  ::GuestLoginInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::GuestLoginInfo* GuestLoginRes::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::GuestLoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:GuestLoginRes.info)
  return info_;
}
inline void GuestLoginRes::set_allocated_info(::GuestLoginInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    set_has_info();
  } else {
    clear_has_info();
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:GuestLoginRes.info)
}

// -------------------------------------------------------------------

// Respose

// required int32 status = 1;
inline bool Respose::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Respose::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Respose::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Respose::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Respose::status() const {
  // @@protoc_insertion_point(field_get:Respose.status)
  return status_;
}
inline void Respose::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Respose.status)
}

// -------------------------------------------------------------------

// SendMsg

// required string msg = 1;
inline bool SendMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& SendMsg::msg() const {
  // @@protoc_insertion_point(field_get:SendMsg.msg)
  return msg_.GetNoArena();
}
inline void SendMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendMsg.msg)
}
#if LANG_CXX11
inline void SendMsg::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SendMsg.msg)
}
#endif
inline void SendMsg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendMsg.msg)
}
inline void SendMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendMsg.msg)
}
inline ::std::string* SendMsg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:SendMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsg::release_msg() {
  // @@protoc_insertion_point(field_release:SendMsg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:SendMsg.msg)
}

// -------------------------------------------------------------------

// SendEmoji

// required int32 id = 1;
inline bool SendEmoji::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendEmoji::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendEmoji::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendEmoji::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SendEmoji::id() const {
  // @@protoc_insertion_point(field_get:SendEmoji.id)
  return id_;
}
inline void SendEmoji::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SendEmoji.id)
}

// -------------------------------------------------------------------

// RecvMsg

// required string msg = 1;
inline bool RecvMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& RecvMsg::msg() const {
  // @@protoc_insertion_point(field_get:RecvMsg.msg)
  return msg_.GetNoArena();
}
inline void RecvMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RecvMsg.msg)
}
#if LANG_CXX11
inline void RecvMsg::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RecvMsg.msg)
}
#endif
inline void RecvMsg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RecvMsg.msg)
}
inline void RecvMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RecvMsg.msg)
}
inline ::std::string* RecvMsg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:RecvMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecvMsg::release_msg() {
  // @@protoc_insertion_point(field_release:RecvMsg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:RecvMsg.msg)
}

// -------------------------------------------------------------------

// ModifyName

// required string name = 1;
inline bool ModifyName::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyName::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyName::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyName::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ModifyName::name() const {
  // @@protoc_insertion_point(field_get:ModifyName.name)
  return name_.GetNoArena();
}
inline void ModifyName::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ModifyName.name)
}
#if LANG_CXX11
inline void ModifyName::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ModifyName.name)
}
#endif
inline void ModifyName::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ModifyName.name)
}
inline void ModifyName::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ModifyName.name)
}
inline ::std::string* ModifyName::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ModifyName.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyName::release_name() {
  // @@protoc_insertion_point(field_release:ModifyName.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyName::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ModifyName.name)
}

// -------------------------------------------------------------------

// ModifyPlayerIcon

// required int32 playericon = 1;
inline bool ModifyPlayerIcon::has_playericon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyPlayerIcon::set_has_playericon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyPlayerIcon::clear_has_playericon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyPlayerIcon::clear_playericon() {
  playericon_ = 0;
  clear_has_playericon();
}
inline ::google::protobuf::int32 ModifyPlayerIcon::playericon() const {
  // @@protoc_insertion_point(field_get:ModifyPlayerIcon.playericon)
  return playericon_;
}
inline void ModifyPlayerIcon::set_playericon(::google::protobuf::int32 value) {
  set_has_playericon();
  playericon_ = value;
  // @@protoc_insertion_point(field_set:ModifyPlayerIcon.playericon)
}

// -------------------------------------------------------------------

// RecvEmoji

// required int32 id = 1;
inline bool RecvEmoji::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvEmoji::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvEmoji::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvEmoji::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RecvEmoji::id() const {
  // @@protoc_insertion_point(field_get:RecvEmoji.id)
  return id_;
}
inline void RecvEmoji::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:RecvEmoji.id)
}

// -------------------------------------------------------------------

// AccountUpgradeReq

// required string phonenumber = 1;
inline bool AccountUpgradeReq::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountUpgradeReq::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountUpgradeReq::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountUpgradeReq::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& AccountUpgradeReq::phonenumber() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeReq.phonenumber)
  return phonenumber_.GetNoArena();
}
inline void AccountUpgradeReq::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountUpgradeReq.phonenumber)
}
#if LANG_CXX11
inline void AccountUpgradeReq::set_phonenumber(::std::string&& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountUpgradeReq.phonenumber)
}
#endif
inline void AccountUpgradeReq::set_phonenumber(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountUpgradeReq.phonenumber)
}
inline void AccountUpgradeReq::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountUpgradeReq.phonenumber)
}
inline ::std::string* AccountUpgradeReq::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:AccountUpgradeReq.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountUpgradeReq::release_phonenumber() {
  // @@protoc_insertion_point(field_release:AccountUpgradeReq.phonenumber)
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountUpgradeReq::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:AccountUpgradeReq.phonenumber)
}

// required string password = 2;
inline bool AccountUpgradeReq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountUpgradeReq::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountUpgradeReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountUpgradeReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& AccountUpgradeReq::password() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeReq.password)
  return password_.GetNoArena();
}
inline void AccountUpgradeReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountUpgradeReq.password)
}
#if LANG_CXX11
inline void AccountUpgradeReq::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountUpgradeReq.password)
}
#endif
inline void AccountUpgradeReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountUpgradeReq.password)
}
inline void AccountUpgradeReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountUpgradeReq.password)
}
inline ::std::string* AccountUpgradeReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:AccountUpgradeReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountUpgradeReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountUpgradeReq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountUpgradeReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountUpgradeReq.password)
}

// -------------------------------------------------------------------

// AccountUpgradeRes

// required int32 status = 1;
inline bool AccountUpgradeRes::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccountUpgradeRes::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccountUpgradeRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccountUpgradeRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 AccountUpgradeRes::status() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeRes.status)
  return status_;
}
inline void AccountUpgradeRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:AccountUpgradeRes.status)
}

// optional string playeraccount = 2;
inline bool AccountUpgradeRes::has_playeraccount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountUpgradeRes::set_has_playeraccount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountUpgradeRes::clear_has_playeraccount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountUpgradeRes::clear_playeraccount() {
  playeraccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playeraccount();
}
inline const ::std::string& AccountUpgradeRes::playeraccount() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeRes.playeraccount)
  return playeraccount_.GetNoArena();
}
inline void AccountUpgradeRes::set_playeraccount(const ::std::string& value) {
  set_has_playeraccount();
  playeraccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountUpgradeRes.playeraccount)
}
#if LANG_CXX11
inline void AccountUpgradeRes::set_playeraccount(::std::string&& value) {
  set_has_playeraccount();
  playeraccount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountUpgradeRes.playeraccount)
}
#endif
inline void AccountUpgradeRes::set_playeraccount(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_playeraccount();
  playeraccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountUpgradeRes.playeraccount)
}
inline void AccountUpgradeRes::set_playeraccount(const char* value, size_t size) {
  set_has_playeraccount();
  playeraccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountUpgradeRes.playeraccount)
}
inline ::std::string* AccountUpgradeRes::mutable_playeraccount() {
  set_has_playeraccount();
  // @@protoc_insertion_point(field_mutable:AccountUpgradeRes.playeraccount)
  return playeraccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountUpgradeRes::release_playeraccount() {
  // @@protoc_insertion_point(field_release:AccountUpgradeRes.playeraccount)
  clear_has_playeraccount();
  return playeraccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountUpgradeRes::set_allocated_playeraccount(::std::string* playeraccount) {
  if (playeraccount != NULL) {
    set_has_playeraccount();
  } else {
    clear_has_playeraccount();
  }
  playeraccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playeraccount);
  // @@protoc_insertion_point(field_set_allocated:AccountUpgradeRes.playeraccount)
}

// optional string password = 3;
inline bool AccountUpgradeRes::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountUpgradeRes::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountUpgradeRes::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountUpgradeRes::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& AccountUpgradeRes::password() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeRes.password)
  return password_.GetNoArena();
}
inline void AccountUpgradeRes::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountUpgradeRes.password)
}
#if LANG_CXX11
inline void AccountUpgradeRes::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountUpgradeRes.password)
}
#endif
inline void AccountUpgradeRes::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountUpgradeRes.password)
}
inline void AccountUpgradeRes::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountUpgradeRes.password)
}
inline ::std::string* AccountUpgradeRes::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:AccountUpgradeRes.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountUpgradeRes::release_password() {
  // @@protoc_insertion_point(field_release:AccountUpgradeRes.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountUpgradeRes::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountUpgradeRes.password)
}

// -------------------------------------------------------------------

// UserLoginReq

// required string playeraccount = 1;
inline bool UserLoginReq::has_playeraccount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginReq::set_has_playeraccount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginReq::clear_has_playeraccount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginReq::clear_playeraccount() {
  playeraccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playeraccount();
}
inline const ::std::string& UserLoginReq::playeraccount() const {
  // @@protoc_insertion_point(field_get:UserLoginReq.playeraccount)
  return playeraccount_.GetNoArena();
}
inline void UserLoginReq::set_playeraccount(const ::std::string& value) {
  set_has_playeraccount();
  playeraccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLoginReq.playeraccount)
}
#if LANG_CXX11
inline void UserLoginReq::set_playeraccount(::std::string&& value) {
  set_has_playeraccount();
  playeraccount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLoginReq.playeraccount)
}
#endif
inline void UserLoginReq::set_playeraccount(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_playeraccount();
  playeraccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLoginReq.playeraccount)
}
inline void UserLoginReq::set_playeraccount(const char* value, size_t size) {
  set_has_playeraccount();
  playeraccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLoginReq.playeraccount)
}
inline ::std::string* UserLoginReq::mutable_playeraccount() {
  set_has_playeraccount();
  // @@protoc_insertion_point(field_mutable:UserLoginReq.playeraccount)
  return playeraccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginReq::release_playeraccount() {
  // @@protoc_insertion_point(field_release:UserLoginReq.playeraccount)
  clear_has_playeraccount();
  return playeraccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginReq::set_allocated_playeraccount(::std::string* playeraccount) {
  if (playeraccount != NULL) {
    set_has_playeraccount();
  } else {
    clear_has_playeraccount();
  }
  playeraccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playeraccount);
  // @@protoc_insertion_point(field_set_allocated:UserLoginReq.playeraccount)
}

// required string password = 2;
inline bool UserLoginReq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLoginReq::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLoginReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& UserLoginReq::password() const {
  // @@protoc_insertion_point(field_get:UserLoginReq.password)
  return password_.GetNoArena();
}
inline void UserLoginReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLoginReq.password)
}
#if LANG_CXX11
inline void UserLoginReq::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLoginReq.password)
}
#endif
inline void UserLoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLoginReq.password)
}
inline void UserLoginReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLoginReq.password)
}
inline ::std::string* UserLoginReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:UserLoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:UserLoginReq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:UserLoginReq.password)
}

// -------------------------------------------------------------------

// UserLoginRes

// required int32 errcode = 1;
inline bool UserLoginRes::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLoginRes::set_has_errcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLoginRes::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLoginRes::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 UserLoginRes::errcode() const {
  // @@protoc_insertion_point(field_get:UserLoginRes.errcode)
  return errcode_;
}
inline void UserLoginRes::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:UserLoginRes.errcode)
}

// optional .GuestLoginInfo info = 2;
inline bool UserLoginRes::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginRes::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginRes::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginRes::clear_info() {
  if (info_ != NULL) info_->Clear();
  clear_has_info();
}
inline const ::GuestLoginInfo& UserLoginRes::info() const {
  const ::GuestLoginInfo* p = info_;
  // @@protoc_insertion_point(field_get:UserLoginRes.info)
  return p != NULL ? *p : *reinterpret_cast<const ::GuestLoginInfo*>(
      &::_GuestLoginInfo_default_instance_);
}
inline ::GuestLoginInfo* UserLoginRes::release_info() {
  // @@protoc_insertion_point(field_release:UserLoginRes.info)
  clear_has_info();
  ::GuestLoginInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::GuestLoginInfo* UserLoginRes::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::GuestLoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:UserLoginRes.info)
  return info_;
}
inline void UserLoginRes::set_allocated_info(::GuestLoginInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    set_has_info();
  } else {
    clear_has_info();
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:UserLoginRes.info)
}

// -------------------------------------------------------------------

// UserLoginOutRes

// required int32 status = 1;
inline bool UserLoginOutRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginOutRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginOutRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginOutRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 UserLoginOutRes::status() const {
  // @@protoc_insertion_point(field_get:UserLoginOutRes.status)
  return status_;
}
inline void UserLoginOutRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:UserLoginOutRes.status)
}

// -------------------------------------------------------------------

// PlayerData

// required int32 money = 1;
inline bool PlayerData::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerData::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerData::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerData::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 PlayerData::money() const {
  // @@protoc_insertion_point(field_get:PlayerData.money)
  return money_;
}
inline void PlayerData::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:PlayerData.money)
}

// required int32 grade = 2;
inline bool PlayerData::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerData::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerData::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerData::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 PlayerData::grade() const {
  // @@protoc_insertion_point(field_get:PlayerData.grade)
  return grade_;
}
inline void PlayerData::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:PlayerData.grade)
}

// required int32 exp = 3;
inline bool PlayerData::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerData::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerData::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 PlayerData::exp() const {
  // @@protoc_insertion_point(field_get:PlayerData.exp)
  return exp_;
}
inline void PlayerData::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:PlayerData.exp)
}

// required int32 vip = 4;
inline bool PlayerData::has_vip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerData::set_has_vip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerData::clear_has_vip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerData::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 PlayerData::vip() const {
  // @@protoc_insertion_point(field_get:PlayerData.vip)
  return vip_;
}
inline void PlayerData::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:PlayerData.vip)
}

// -------------------------------------------------------------------

// LoginBonusData

// required int32 id = 1;
inline bool LoginBonusData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginBonusData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginBonusData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginBonusData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LoginBonusData::id() const {
  // @@protoc_insertion_point(field_get:LoginBonusData.id)
  return id_;
}
inline void LoginBonusData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:LoginBonusData.id)
}

// required int32 num = 2;
inline bool LoginBonusData::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginBonusData::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginBonusData::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginBonusData::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 LoginBonusData::num() const {
  // @@protoc_insertion_point(field_get:LoginBonusData.num)
  return num_;
}
inline void LoginBonusData::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:LoginBonusData.num)
}

// required int32 status = 3;
inline bool LoginBonusData::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginBonusData::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginBonusData::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginBonusData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 LoginBonusData::status() const {
  // @@protoc_insertion_point(field_get:LoginBonusData.status)
  return status_;
}
inline void LoginBonusData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:LoginBonusData.status)
}

// required int32 day = 4;
inline bool LoginBonusData::has_day() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginBonusData::set_has_day() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginBonusData::clear_has_day() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginBonusData::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 LoginBonusData::day() const {
  // @@protoc_insertion_point(field_get:LoginBonusData.day)
  return day_;
}
inline void LoginBonusData::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:LoginBonusData.day)
}

// -------------------------------------------------------------------

// GetPlayerDataRes

// required int32 errcode = 1;
inline bool GetPlayerDataRes::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetPlayerDataRes::set_has_errcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetPlayerDataRes::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetPlayerDataRes::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 GetPlayerDataRes::errcode() const {
  // @@protoc_insertion_point(field_get:GetPlayerDataRes.errcode)
  return errcode_;
}
inline void GetPlayerDataRes::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:GetPlayerDataRes.errcode)
}

// optional .PlayerData playerdata = 2;
inline bool GetPlayerDataRes::has_playerdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPlayerDataRes::set_has_playerdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPlayerDataRes::clear_has_playerdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPlayerDataRes::clear_playerdata() {
  if (playerdata_ != NULL) playerdata_->Clear();
  clear_has_playerdata();
}
inline const ::PlayerData& GetPlayerDataRes::playerdata() const {
  const ::PlayerData* p = playerdata_;
  // @@protoc_insertion_point(field_get:GetPlayerDataRes.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::PlayerData*>(
      &::_PlayerData_default_instance_);
}
inline ::PlayerData* GetPlayerDataRes::release_playerdata() {
  // @@protoc_insertion_point(field_release:GetPlayerDataRes.playerdata)
  clear_has_playerdata();
  ::PlayerData* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::PlayerData* GetPlayerDataRes::mutable_playerdata() {
  set_has_playerdata();
  if (playerdata_ == NULL) {
    playerdata_ = new ::PlayerData;
  }
  // @@protoc_insertion_point(field_mutable:GetPlayerDataRes.playerdata)
  return playerdata_;
}
inline void GetPlayerDataRes::set_allocated_playerdata(::PlayerData* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete playerdata_;
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    set_has_playerdata();
  } else {
    clear_has_playerdata();
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:GetPlayerDataRes.playerdata)
}

// repeated .LoginBonusData bonusdata = 3;
inline int GetPlayerDataRes::bonusdata_size() const {
  return bonusdata_.size();
}
inline void GetPlayerDataRes::clear_bonusdata() {
  bonusdata_.Clear();
}
inline const ::LoginBonusData& GetPlayerDataRes::bonusdata(int index) const {
  // @@protoc_insertion_point(field_get:GetPlayerDataRes.bonusdata)
  return bonusdata_.Get(index);
}
inline ::LoginBonusData* GetPlayerDataRes::mutable_bonusdata(int index) {
  // @@protoc_insertion_point(field_mutable:GetPlayerDataRes.bonusdata)
  return bonusdata_.Mutable(index);
}
inline ::LoginBonusData* GetPlayerDataRes::add_bonusdata() {
  // @@protoc_insertion_point(field_add:GetPlayerDataRes.bonusdata)
  return bonusdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LoginBonusData >*
GetPlayerDataRes::mutable_bonusdata() {
  // @@protoc_insertion_point(field_mutable_list:GetPlayerDataRes.bonusdata)
  return &bonusdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LoginBonusData >&
GetPlayerDataRes::bonusdata() const {
  // @@protoc_insertion_point(field_list:GetPlayerDataRes.bonusdata)
  return bonusdata_;
}

// -------------------------------------------------------------------

// GetLoginBonusReq

// required int32 signtype = 1;
inline bool GetLoginBonusReq::has_signtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLoginBonusReq::set_has_signtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLoginBonusReq::clear_has_signtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLoginBonusReq::clear_signtype() {
  signtype_ = 0;
  clear_has_signtype();
}
inline ::google::protobuf::int32 GetLoginBonusReq::signtype() const {
  // @@protoc_insertion_point(field_get:GetLoginBonusReq.signtype)
  return signtype_;
}
inline void GetLoginBonusReq::set_signtype(::google::protobuf::int32 value) {
  set_has_signtype();
  signtype_ = value;
  // @@protoc_insertion_point(field_set:GetLoginBonusReq.signtype)
}

// required int32 day = 2;
inline bool GetLoginBonusReq::has_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLoginBonusReq::set_has_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLoginBonusReq::clear_has_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLoginBonusReq::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 GetLoginBonusReq::day() const {
  // @@protoc_insertion_point(field_get:GetLoginBonusReq.day)
  return day_;
}
inline void GetLoginBonusReq::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:GetLoginBonusReq.day)
}

// -------------------------------------------------------------------

// GetLoginBonusRes

// required int32 errcode = 1;
inline bool GetLoginBonusRes::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLoginBonusRes::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLoginBonusRes::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLoginBonusRes::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 GetLoginBonusRes::errcode() const {
  // @@protoc_insertion_point(field_get:GetLoginBonusRes.errcode)
  return errcode_;
}
inline void GetLoginBonusRes::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:GetLoginBonusRes.errcode)
}

// optional int32 id = 2;
inline bool GetLoginBonusRes::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLoginBonusRes::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLoginBonusRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLoginBonusRes::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GetLoginBonusRes::id() const {
  // @@protoc_insertion_point(field_get:GetLoginBonusRes.id)
  return id_;
}
inline void GetLoginBonusRes::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GetLoginBonusRes.id)
}

// optional int32 num = 3;
inline bool GetLoginBonusRes::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLoginBonusRes::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLoginBonusRes::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLoginBonusRes::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GetLoginBonusRes::num() const {
  // @@protoc_insertion_point(field_get:GetLoginBonusRes.num)
  return num_;
}
inline void GetLoginBonusRes::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:GetLoginBonusRes.num)
}

// repeated .LoginBonusData bonusdata = 4;
inline int GetLoginBonusRes::bonusdata_size() const {
  return bonusdata_.size();
}
inline void GetLoginBonusRes::clear_bonusdata() {
  bonusdata_.Clear();
}
inline const ::LoginBonusData& GetLoginBonusRes::bonusdata(int index) const {
  // @@protoc_insertion_point(field_get:GetLoginBonusRes.bonusdata)
  return bonusdata_.Get(index);
}
inline ::LoginBonusData* GetLoginBonusRes::mutable_bonusdata(int index) {
  // @@protoc_insertion_point(field_mutable:GetLoginBonusRes.bonusdata)
  return bonusdata_.Mutable(index);
}
inline ::LoginBonusData* GetLoginBonusRes::add_bonusdata() {
  // @@protoc_insertion_point(field_add:GetLoginBonusRes.bonusdata)
  return bonusdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LoginBonusData >*
GetLoginBonusRes::mutable_bonusdata() {
  // @@protoc_insertion_point(field_mutable_list:GetLoginBonusRes.bonusdata)
  return &bonusdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LoginBonusData >&
GetLoginBonusRes::bonusdata() const {
  // @@protoc_insertion_point(field_list:GetLoginBonusRes.bonusdata)
  return bonusdata_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Stype> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Stype>() {
  return ::Stype_descriptor();
}
template <> struct is_proto_enum< ::Cmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd>() {
  return ::Cmd_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
